{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-cell-content.html",
      "properties": [
        {
          "name": "row",
          "type": "Object",
          "description": "an object containing all values for this row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 15,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "column",
          "type": "Object",
          "description": "an object containing the column configuration for the cell being rendered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 20
            },
            "end": {
              "line": 23,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "renderValue",
          "description": "renders the content if this cell",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 12
            },
            "end": {
              "line": 93,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "row",
              "type": "{}"
            },
            {
              "name": "column",
              "type": "{field: String, type: {}}"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 8
        },
        "end": {
          "line": 94,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridCellContent",
      "attributes": [
        {
          "name": "row",
          "description": "an object containing all values for this row",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 15,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "column",
          "description": "an object containing the column configuration for the cell being rendered",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 20
            },
            "end": {
              "line": 23,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-cell-content"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-column-configurator.html",
      "properties": [
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all available columns from the actindo-grid",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 20
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "_columns",
          "type": "Array",
          "description": "internal structure for keeping the columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 20
            },
            "end": {
              "line": 85,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 12
            },
            "end": {
              "line": 109,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "openColumnConfiguration",
          "description": "opens the dialog which allows the user to select the visible columns and sort them",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onColumnsChanged",
          "description": "called when the columns array changes. Reflects the changes to the internal column list",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 12
            },
            "end": {
              "line": 127,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_toggleVisibility",
          "description": "called when a user taps a visibility checkbox for a column. Toggles the columns visibility",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 12
            },
            "end": {
              "line": 140,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 66,
          "column": 8
        },
        "end": {
          "line": 141,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridColumnConfigurator",
      "attributes": [
        {
          "name": "columns",
          "description": "contains all available columns from the actindo-grid",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 20
            },
            "end": {
              "line": 77,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "columns-changed",
          "description": "Fired when the `columns` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-column-configurator"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-search.html",
      "properties": [
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "userInput",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 35,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "query",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 20
            },
            "end": {
              "line": 41,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onQueryChanged\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "fields",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 20
            },
            "end": {
              "line": 45,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 12
            },
            "end": {
              "line": 54,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onButtonTap",
          "description": "called when the user taps the search button",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 12
            },
            "end": {
              "line": 75,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onQueryChanged",
          "description": "called when the query changes. Let userInput follow this new value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 12
            },
            "end": {
              "line": 85,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "String"
            }
          ]
        },
        {
          "name": "_onSearch",
          "description": "called when the user wishes to search for the current query",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 12
            },
            "end": {
              "line": 105,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onSearchBlur",
          "description": "called when the search input is blurred",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 12
            },
            "end": {
              "line": 120,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 8
        },
        "end": {
          "line": 121,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridSearch",
      "attributes": [
        {
          "name": "collapsed",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "user-input",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 35,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "query",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 20
            },
            "end": {
              "line": 41,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "fields",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 20
            },
            "end": {
              "line": 45,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "query-changed",
          "description": "Fired when the `query` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-search"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-in-option-input.html",
      "properties": [
        {
          "name": "displayField",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 20
            },
            "end": {
              "line": 24,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"label\""
        },
        {
          "name": "valueField",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 20
            },
            "end": {
              "line": 28,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"id\""
        },
        {
          "name": "value",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 34,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 42,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterInOprionInput",
      "attributes": [
        {
          "name": "display-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 20
            },
            "end": {
              "line": 24,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 20
            },
            "end": {
              "line": 28,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {}
        },
        {
          "name": "selected-item",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 34,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-in-option-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-edit.html",
      "properties": [
        {
          "name": "editing",
          "type": "boolean",
          "description": "Whether is editing or not",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 20
            },
            "end": {
              "line": 93,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "The status of the filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 20
            },
            "end": {
              "line": 100,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "filter",
          "type": "Object",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 20
            },
            "end": {
              "line": 108,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "property",
          "type": "string",
          "description": "contains the column value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 20
            },
            "end": {
              "line": 114,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "operator",
          "type": "string",
          "description": "contains the operator value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 20
            },
            "end": {
              "line": 121,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onOperatorChanged\""
            }
          }
        },
        {
          "name": "value",
          "type": "?",
          "description": "contains the filter value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 20
            },
            "end": {
              "line": 125,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_valueHistory",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 20
            },
            "end": {
              "line": 131,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "_operators",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 132,
              "column": 20
            },
            "end": {
              "line": 135,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_selectedColumn",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 20
            },
            "end": {
              "line": 139,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onSelectedColumnChanged\""
            }
          }
        },
        {
          "name": "_saveLabel",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 20
            },
            "end": {
              "line": 143,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_onSelectedColumnChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 12
            },
            "end": {
              "line": 160,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newColumn"
            },
            {
              "name": "oldColumn"
            }
          ]
        },
        {
          "name": "_onOperatorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 12
            },
            "end": {
              "line": 189,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opt"
            }
          ]
        },
        {
          "name": "getInputComponent",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 12
            },
            "end": {
              "line": 210,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            },
            {
              "name": "operator"
            }
          ]
        },
        {
          "name": "_onValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 212,
              "column": 12
            },
            "end": {
              "line": 230,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_getSaveLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 12
            },
            "end": {
              "line": 239,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            }
          ]
        },
        {
          "name": "_save",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 12
            },
            "end": {
              "line": 262,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_cancel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 264,
              "column": 12
            },
            "end": {
              "line": 267,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 269,
              "column": 12
            },
            "end": {
              "line": 273,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "reset",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 12
            },
            "end": {
              "line": 285,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 82,
          "column": 8
        },
        "end": {
          "line": 286,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterEdit",
      "attributes": [
        {
          "name": "editing",
          "description": "Whether is editing or not",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 20
            },
            "end": {
              "line": 93,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "active",
          "description": "The status of the filter",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 20
            },
            "end": {
              "line": 100,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "filter",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 20
            },
            "end": {
              "line": 108,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "property",
          "description": "contains the column value",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 20
            },
            "end": {
              "line": 114,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "operator",
          "description": "contains the operator value",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 20
            },
            "end": {
              "line": 121,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "contains the filter value",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 20
            },
            "end": {
              "line": 125,
              "column": 29
            }
          },
          "metadata": {}
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-edit"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter.html",
      "properties": [
        {
          "name": "filterList",
          "type": "Array",
          "description": "contain all available filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 20
            },
            "end": {
              "line": 154,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all the columns has filterable property equal to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 20
            },
            "end": {
              "line": 160,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "debounce",
          "type": "boolean",
          "description": "if this is true, the request will be debounced when the filter is changed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 20
            },
            "end": {
              "line": 168,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "true"
        }
      ],
      "methods": [
        {
          "name": "_onSettingClick",
          "description": "Toggle the setting panel",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 12
            },
            "end": {
              "line": 177,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_deleteMultiple",
          "description": "Remove all available filter",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 12
            },
            "end": {
              "line": 184,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_showAddDialog",
          "description": "Show the add dialog to create a filter",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 12
            },
            "end": {
              "line": 198,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_createNewFilter",
          "description": "Append a filter to the filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 12
            },
            "end": {
              "line": 205,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_removeFilter",
          "description": "Remove a filter from filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 12
            },
            "end": {
              "line": 213,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_editFilter",
          "description": "Edit a filter of filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 12
            },
            "end": {
              "line": 225,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 141,
          "column": 8
        },
        "end": {
          "line": 226,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilter",
      "attributes": [
        {
          "name": "filter-list",
          "description": "contain all available filter",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 20
            },
            "end": {
              "line": 154,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "columns",
          "description": "contains all the columns has filterable property equal to true",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 20
            },
            "end": {
              "line": 160,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "debounce",
          "description": "if this is true, the request will be debounced when the filter is changed",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 20
            },
            "end": {
              "line": 168,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "filter-list-changed",
          "description": "Fired when the `filterList` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "debounce-changed",
          "description": "Fired when the `debounce` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-between-input.html",
      "properties": [
        {
          "name": "value",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 38,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 12
            },
            "end": {
              "line": 44,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 8
        },
        "end": {
          "line": 45,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterBetweenInput",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 38,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-between-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-in-input.html",
      "properties": [
        {
          "name": "_inputValue",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 20
            },
            "end": {
              "line": 76,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_value",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 20
            },
            "end": {
              "line": 82,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "value",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "ENTER",
          "type": "number",
          "description": "Key code for Enter.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 20
            },
            "end": {
              "line": 99,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "13"
        }
      ],
      "methods": [
        {
          "name": "_onKeyPress",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_remove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_computeLabelVisibility",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 121,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ]
        },
        {
          "name": "_computeAlwaysFloatLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 12
            },
            "end": {
              "line": 125,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "len"
            }
          ]
        },
        {
          "name": "_handleEnterEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 135,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_handleBackSpaceEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 12
            },
            "end": {
              "line": 144,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 12
            },
            "end": {
              "line": 149,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 68,
          "column": 8
        },
        "end": {
          "line": 150,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterInInput",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-in-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-item.html",
      "properties": [
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all the columns has filterable property equal to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 20
            },
            "end": {
              "line": 46,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "The status of the filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 20
            },
            "end": {
              "line": 53,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onActiveChanged\""
            }
          }
        },
        {
          "name": "filter",
          "type": "Object",
          "description": "contains the current filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 20
            },
            "end": {
              "line": 62,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onFilterChanged\""
            }
          }
        },
        {
          "name": "_label",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 20
            },
            "end": {
              "line": 65,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_firstLoad",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 20
            },
            "end": {
              "line": 69,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "_filter",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 20
            },
            "end": {
              "line": 72,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_showEditDialog",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 12
            },
            "end": {
              "line": 85,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onFilterChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 12
            },
            "end": {
              "line": 91,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            }
          ]
        },
        {
          "name": "_onActiveChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 12
            },
            "end": {
              "line": 101,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ]
        },
        {
          "name": "_save",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 12
            },
            "end": {
              "line": 109,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_remove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 12
            },
            "end": {
              "line": 114,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getDisplayValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 12
            },
            "end": {
              "line": 132,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "filter"
            }
          ]
        },
        {
          "name": "_getLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 12
            },
            "end": {
              "line": 144,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 8
        },
        "end": {
          "line": 145,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterItem",
      "attributes": [
        {
          "name": "columns",
          "description": "contains all the columns has filterable property equal to true",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 20
            },
            "end": {
              "line": 46,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "active",
          "description": "The status of the filter",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 20
            },
            "end": {
              "line": 53,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "filter",
          "description": "contains the current filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 20
            },
            "end": {
              "line": 62,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-item"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-tag.html",
      "properties": [
        {
          "name": "active",
          "type": "boolean",
          "description": "set to true if the filter is active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 20
            },
            "end": {
              "line": 91,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "noCheckBox",
          "type": "boolean",
          "description": "if this is true, the checkbox on the left will be hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 20
            },
            "end": {
              "line": 99,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noRemoveButton",
          "type": "boolean",
          "description": "if this is true, the close icon on the right will be hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 20
            },
            "end": {
              "line": 107,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noSelfRemove",
          "type": "boolean",
          "description": "if this is true, the item will not self-destroyed, the only an \"remove\" event will be fired",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 20
            },
            "end": {
              "line": 115,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_remove",
          "description": "Call when user click on the close icon",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 12
            },
            "end": {
              "line": 139,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 80,
          "column": 8
        },
        "end": {
          "line": 140,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterTag",
      "attributes": [
        {
          "name": "active",
          "description": "set to true if the filter is active",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 20
            },
            "end": {
              "line": 91,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-check-box",
          "description": "if this is true, the checkbox on the left will be hidden",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 20
            },
            "end": {
              "line": 99,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-remove-button",
          "description": "if this is true, the close icon on the right will be hidden",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 20
            },
            "end": {
              "line": 107,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-self-remove",
          "description": "if this is true, the item will not self-destroyed, the only an \"remove\" event will be fired",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 20
            },
            "end": {
              "line": 115,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "content",
          "range": {
            "file": "actindo-grid-filter-tag.html",
            "start": {
              "line": 69,
              "column": 16
            },
            "end": {
              "line": 69,
              "column": 44
            }
          }
        }
      ],
      "tagname": "actindo-grid-filter-tag"
    },
    {
      "description": "`<actindo-grid>` implements a highly reusable data grid to display your data.\n\n### Features\n\n- column configuration as property, therefore dynamic column changes are propagated through data binding\n- global search bar (hidden if no column is configured to be `searchable`)\n- filter panel (hidden if no column is configured to be `filterable`)\n- sorting (by every column that is configured to be `sortable`)\n- pagination as long as a `remote` is specified to fetch data from\n- remote loading of data, including sorting, paging, searching, filtering\n- static data display (disables pagination)\n- custom cell formatting through `render` callbacks\n- hidden columns that can be shown manually",
      "summary": "",
      "path": "actindo-grid.html",
      "properties": [
        {
          "name": "columnConfiguration",
          "type": "[{label: string, field: string, type: mixed, identifying: bool, hidden: bool, searchable: bool, sortable: bool, filterable: bool, resizable: bool, render: function, renderDefaultFilter: function, nullMessage: string}]",
          "description": "contains the columns and their configuration.\n* label: the name of this column, used in the header\n* field: data index where this columns value is located\n* type: the data type of this column, can be any valid javascript type\n* identifying: if this column contains a unique key that identifies the single rows. _One_ column must have this if you want to use a selection mode\n* hidden: if this column is hidden by default and needs to be enabled manually\n* searchable: if this field is searched through the global search field. Defaults to false\n* sortable: if the grid can by sorted by this field. Defaults to false\n* filterable: if the grid can be filtered by this columns values\n* resizable: if this column is resizable\n* render: Optional callback that is given the columns value for each row and has to return a DOMElement to be displayed\n* renderDefaultFilter: return a DOMElement element to be displayed\n* nullMessage: Text shown if field is null; if nothing specified it will display empty string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 456,
              "column": 20
            },
            "end": {
              "line": 461,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "emptyMessage",
          "type": "string",
          "description": "if grid has no items this message will be shown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 20
            },
            "end": {
              "line": 469,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "disabledField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is disabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 20
            },
            "end": {
              "line": 477,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_disabled\""
        },
        {
          "name": "finishedField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as finished.\nThis only works with a selection mode enabled since the marker replaces the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 20
            },
            "end": {
              "line": 486,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_finished\""
        },
        {
          "name": "page",
          "type": "number",
          "description": "the current page number",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 491,
              "column": 20
            },
            "end": {
              "line": 496,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onPageChanged\""
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "sort",
          "type": "Object",
          "description": "contains the current sorting criteria, the key \"field\" contains the field name, the field \"order\" a boolean: true is ASC, false is DESC\n{field: String, order: Boolean}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 20
            },
            "end": {
              "line": 508,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "filterList",
          "type": "[{property: string, operator: string, value: mixed}]",
          "description": "contains the list of filter of the grid.\n* property: the name of the column\n* operator: the value of the operator such as (=, like,..)\n* value: the value need to be filtered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 522,
              "column": 20
            },
            "end": {
              "line": 527,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "query",
          "type": "string",
          "description": "contains the current search query",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 532,
              "column": 20
            },
            "end": {
              "line": 537,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onQueryChanged\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "totalItems",
          "type": "number",
          "description": "stores the number of total items (over all pages)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 20
            },
            "end": {
              "line": 547,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "hideColumnConfiguration",
          "type": "boolean",
          "description": "if this is true, the column selection switch is hidden and the user can not enable/disable or rearrange columns",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 20
            },
            "end": {
              "line": 555,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "filterDebounce",
          "type": "boolean",
          "description": "if this is true, the request will be debounced when the filter is changed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 560,
              "column": 20
            },
            "end": {
              "line": 563,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "items",
          "type": "Array",
          "description": "contains all items that are currently in the grid. You can set this property to manually\nhandle the content of the grid in case you don't want to use the remote loading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 569,
              "column": 20
            },
            "end": {
              "line": 575,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "itemsPerPage",
          "type": "number",
          "description": "how mny items to show per page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 20
            },
            "end": {
              "line": 583,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "25"
        },
        {
          "name": "lockedField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as locked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 588,
              "column": 20
            },
            "end": {
              "line": 591,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_locked\""
        },
        {
          "name": "remote",
          "type": "string",
          "description": "the url to load items from. Alternatively you can use the property `items` to manually add data to the grid,\nhowever that disables the possibility to search, filter, or sort",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 20
            },
            "end": {
              "line": 600,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "remotePathData",
          "type": "string",
          "description": "where the items array is located in the remote response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 20
            },
            "end": {
              "line": 608,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"data\""
        },
        {
          "name": "remotePathCount",
          "type": "string",
          "description": "where the total count of items is located in the remote response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 613,
              "column": 20
            },
            "end": {
              "line": 616,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"n_rows\""
        },
        {
          "name": "remoteParams",
          "type": "Object",
          "description": "additional url params to be added to the remote url",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 20
            },
            "end": {
              "line": 626,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "remoteParamFilter",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the user selected filters",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 631,
              "column": 20
            },
            "end": {
              "line": 634,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"filter\""
        },
        {
          "name": "remoteParamLimit",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the number of items to be loaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 639,
              "column": 20
            },
            "end": {
              "line": 642,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"limit\""
        },
        {
          "name": "remoteParamOffset",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the requested page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 647,
              "column": 20
            },
            "end": {
              "line": 650,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"start\""
        },
        {
          "name": "remoteParamSearch",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the search phrase the user entered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 655,
              "column": 20
            },
            "end": {
              "line": 658,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"query\""
        },
        {
          "name": "remoteParamSearchFields",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the fields that should be searched for `query`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 663,
              "column": 20
            },
            "end": {
              "line": 666,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"fields\""
        },
        {
          "name": "remoteParamSerializeOptionals",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the optional fields.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 671,
              "column": 20
            },
            "end": {
              "line": 674,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"serializeOptionals\""
        },
        {
          "name": "remoteParamSort",
          "type": "string",
          "description": "this url parameter is added to the `remote` url containing the user selected sorting. Set this\nto null to sort the data locally",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 680,
              "column": 20
            },
            "end": {
              "line": 683,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"sort\""
        },
        {
          "name": "pagingDisabled",
          "type": "boolean",
          "description": "set to true if results should not be paged",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 689,
              "column": 20
            },
            "end": {
              "line": 692,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "selectionMode",
          "type": "string",
          "description": "how rows can be selected. \"multi\" to allow the selection of n elements, \"single\" to allow the\nselection of only a single element (selecting a new one will deselect the previously selected one).\nAny other value will disable the selection model entirely.\nIf a selection mode is enabled, a checkbox is added to the start of each row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 700,
              "column": 20
            },
            "end": {
              "line": 702,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "if selectionMode=single, this property contains the selected item if one is selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 707,
              "column": 20
            },
            "end": {
              "line": 711,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"onSelectedItemChanged\""
            }
          }
        },
        {
          "name": "selectedItems",
          "type": "Array",
          "description": "contains all the currently selected items",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 716,
              "column": 20
            },
            "end": {
              "line": 722,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "disableTapRowToSelect",
          "type": "boolean",
          "description": "if this is enabled and a selection mode is active, tapping a row will not select it. Rows can then\nonly be selected by explicitely checking their checkboxes",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 728,
              "column": 20
            },
            "end": {
              "line": 731,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_columns",
          "type": "Array",
          "description": "internal property that holds the processed columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 736,
              "column": 20
            },
            "end": {
              "line": 741,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_filterColumns",
          "type": "Array",
          "description": "holds the colmumn has filterable is true",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 746,
              "column": 20
            },
            "end": {
              "line": 749,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_identifyingColumn",
          "type": "Object",
          "description": "holds the colmumn that is marked as identifying",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 754,
              "column": 20
            },
            "end": {
              "line": 756,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_everythingSelected",
          "type": "boolean",
          "description": "property that controls the checked state of the \"select all checkbox\" in selectionMode=multi",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 761,
              "column": 20
            },
            "end": {
              "line": 764,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_partiallySelected",
          "type": "boolean",
          "description": "property that indicates if a partial selection is active (at least one item, but not all)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 769,
              "column": 20
            },
            "end": {
              "line": 772,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_xhr",
          "type": "Object",
          "description": "current xhr request",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 777,
              "column": 20
            },
            "end": {
              "line": 779,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_pages",
          "type": "Array",
          "description": "List of pages used for dom-repeat in dropdown to change current page",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 784,
              "column": 20
            },
            "end": {
              "line": 787,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_serializeOptionals",
          "type": "Array",
          "description": "List of the optional column. The hidden column will not be in this list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 792,
              "column": 21
            },
            "end": {
              "line": 795,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "firstPage",
          "description": "loads the first page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 810,
              "column": 12
            },
            "end": {
              "line": 812,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "lastPage",
          "description": "loads the last page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 817,
              "column": 12
            },
            "end": {
              "line": 819,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "nextPage",
          "description": "loads the next page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 824,
              "column": 12
            },
            "end": {
              "line": 826,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "previousPage",
          "description": "loads the previous page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 831,
              "column": 12
            },
            "end": {
              "line": 833,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "refresh",
          "description": "reloads the grid data from the remote",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 838,
              "column": 12
            },
            "end": {
              "line": 856,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 875,
              "column": 12
            },
            "end": {
              "line": 882,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_initColumnResizing",
          "description": "sets up the column resizing handlers",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 934,
              "column": 12
            },
            "end": {
              "line": 1013,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onHeadTapped",
          "description": "called when the table head is tapped. Check if the tapped column is sortable and if so, sort by it",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1025,
              "column": 12
            },
            "end": {
              "line": 1081,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onQueryChanged",
          "description": "called when the property `query` changes. Set page to 1",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1087,
              "column": 12
            },
            "end": {
              "line": 1089,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onRowTap",
          "description": "called when a row in the table is tapped. If row tapping should select the row and a selection mode\nis active, the tapped row is selected",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1096,
              "column": 12
            },
            "end": {
              "line": 1131,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "onSelectedItemChanged",
          "description": "called when the selected item changes (selection mode = single). Updates the selectedItems property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1138,
              "column": 12
            },
            "end": {
              "line": 1149,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "{}",
              "description": "the newly selected item"
            }
          ]
        },
        {
          "name": "_toggleAllSelection",
          "description": "called when the \"select all\" checkbox is tapped. Toggles the selection of all items",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1155,
              "column": 12
            },
            "end": {
              "line": 1174,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onItemsChanged",
          "description": "called when the items property changes. Move it to _items and make sure to properly\npropagate the change.\nUnfortunately a copy of th original item has to be created to make polymer aware of this change.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1184,
              "column": 12
            },
            "end": {
              "line": 1235,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change",
              "type": "{path: String, base: []}"
            }
          ]
        },
        {
          "name": "_onPageChanged",
          "description": "called when a new page is set. Make sure it's within the possible bounds",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1243,
              "column": 12
            },
            "end": {
              "line": 1248,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "Number"
            }
          ]
        },
        {
          "name": "_onSelectionChanged",
          "description": "called when the selected items change. Fires an event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1254,
              "column": 12
            },
            "end": {
              "line": 1258,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_attachOperatorToColumn",
          "description": "attach operator property to column object",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1264,
              "column": 12
            },
            "end": {
              "line": 1284,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ]
        },
        {
          "name": "_onColumnConfigurationChanged",
          "description": "call when column configuration change",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1291,
              "column": 12
            },
            "end": {
              "line": 1330,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columns"
            }
          ]
        },
        {
          "name": "_checkIdentifyColumn",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1332,
              "column": 12
            },
            "end": {
              "line": 1346,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            }
          ]
        },
        {
          "name": "_consolidateColumns",
          "description": "called when the columnConfiguration changes. Process the columns and copy them to the internal\n_columns property.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1355,
              "column": 12
            },
            "end": {
              "line": 1388,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columnConfiguration",
              "type": "{base: []}"
            }
          ]
        },
        {
          "name": "_load",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1390,
              "column": 12
            },
            "end": {
              "line": 1462,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filter"
            }
          ]
        },
        {
          "name": "_onFilterChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1464,
              "column": 12
            },
            "end": {
              "line": 1487,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filterList"
            }
          ]
        },
        {
          "name": "_onRemoteChanged",
          "description": "called on explicit refresh or if any of the parameter changes that require a reload from the remote",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1493,
              "column": 12
            },
            "end": {
              "line": 1503,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filterList = []"
            }
          ]
        },
        {
          "name": "_loadDebounced",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1505,
              "column": 12
            },
            "end": {
              "line": 1528,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filterList"
            }
          ]
        },
        {
          "name": "_serialize",
          "description": "takes the given object and creates an http query string from it\nusage: let str = _serialize({foo: 'bar', baz: ['a', 'b']}); => 'foo=bar&baz[0]=a&baz[1]=b'",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1545,
              "column": 12
            },
            "end": {
              "line": 1556,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj",
              "type": "{}",
              "description": "the object to serialize"
            },
            {
              "name": "prefix",
              "type": "String",
              "description": "internal only (used in recursive calls for nested objects)"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_sizeColumnsByHeaders",
          "description": "sets the width of all grid cells to the width of its headers. This is sometimes required, for example when adding\nnew rows: without setting an explicit width they are autosized and may end up blowing up the width of the entire column",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1564,
              "column": 12
            },
            "end": {
              "line": 1582,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_arrayLengthEquals",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1592,
              "column": 12
            },
            "end": {
              "line": 1599,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            },
            {
              "name": "equals"
            }
          ]
        },
        {
          "name": "_arrayLengthGT",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1601,
              "column": 12
            },
            "end": {
              "line": 1608,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            },
            {
              "name": "gt"
            }
          ]
        },
        {
          "name": "_canPageBackward",
          "description": "checks if the user can page backwards",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1617,
              "column": 12
            },
            "end": {
              "line": 1619,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the current page"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_canPageForward",
          "description": "checks if the user can page forwards",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1630,
              "column": 12
            },
            "end": {
              "line": 1632,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the current page"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems",
              "type": "Number",
              "description": "how mnay items are in the grid in total"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_getItemsFrom",
          "description": "calculates the offset for the pagination query",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1642,
              "column": 12
            },
            "end": {
              "line": 1644,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the page to calculate the offset for"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_getItemsTo",
          "description": "returns the index of the last item on the given page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1653,
              "column": 12
            },
            "end": {
              "line": 1655,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the pag to calculate the last index for"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems"
            }
          ]
        },
        {
          "name": "_evaluatesTrue",
          "description": "checks if the given value evaluates to true",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1664,
              "column": 12
            },
            "end": {
              "line": 1666,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isColumnVisibile",
          "description": "determines if the given column is visible",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1675,
              "column": 12
            },
            "end": {
              "line": 1677,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "{hidden: bool}"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isItemSelected",
          "description": "checks if the given item is selected",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1687,
              "column": 12
            },
            "end": {
              "line": 1689,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "{}",
              "description": "one item from the current data array"
            },
            {
              "name": "selectedItems",
              "type": "[]",
              "description": "an array of currently selected items"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isSearchHidden",
          "description": "checks if the grid search should be hidden. This is the case when no remote is configured\nor if no column is marked as searchable",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1700,
              "column": 12
            },
            "end": {
              "line": 1713,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote",
              "type": "String"
            },
            {
              "name": "columns",
              "type": "{}"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isSortedBy",
          "description": "checks if the grid is currently sorted by the given column",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1723,
              "column": 12
            },
            "end": {
              "line": 1729,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "{field: String}",
              "description": "the column to check"
            },
            {
              "name": "sort",
              "type": "{field: String}",
              "description": "the current sorting array"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_propertyEvaluatesTrue",
          "description": "determines if the given field evaluates to true in the given item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1737,
              "column": 12
            },
            "end": {
              "line": 1747,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field",
              "type": "String"
            },
            {
              "name": "item",
              "type": "{}"
            }
          ]
        },
        {
          "name": "_stringEquals",
          "description": "checks if the given string equals one or more given strings. The first given parameter is the value to\nlook for, it is compared with oll other given params and if one of them matches, true is returned; otherwise\nfalse",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1757,
              "column": 12
            },
            "end": {
              "line": 1768,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_getColumnWidth",
          "description": "helper to determine the width of newly rendered cells",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1777,
              "column": 12
            },
            "end": {
              "line": 1784,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "type": "Number",
              "description": "the index of the column"
            }
          ],
          "return": {
            "type": "String",
            "desc": "a css string defining the width"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 421,
          "column": 8
        },
        "end": {
          "line": 1785,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGrid",
      "attributes": [
        {
          "name": "column-configuration",
          "description": "contains the columns and their configuration.\n* label: the name of this column, used in the header\n* field: data index where this columns value is located\n* type: the data type of this column, can be any valid javascript type\n* identifying: if this column contains a unique key that identifies the single rows. _One_ column must have this if you want to use a selection mode\n* hidden: if this column is hidden by default and needs to be enabled manually\n* searchable: if this field is searched through the global search field. Defaults to false\n* sortable: if the grid can by sorted by this field. Defaults to false\n* filterable: if the grid can be filtered by this columns values\n* resizable: if this column is resizable\n* render: Optional callback that is given the columns value for each row and has to return a DOMElement to be displayed\n* renderDefaultFilter: return a DOMElement element to be displayed\n* nullMessage: Text shown if field is null; if nothing specified it will display empty string",
          "sourceRange": {
            "start": {
              "line": 456,
              "column": 20
            },
            "end": {
              "line": 461,
              "column": 21
            }
          },
          "metadata": {},
          "type": "[{label: string, field: string, type: mixed, identifying: bool, hidden: bool, searchable: bool, sortable: bool, filterable: bool, resizable: bool, render: function, renderDefaultFilter: function, nullMessage: string}]"
        },
        {
          "name": "empty-message",
          "description": "if grid has no items this message will be shown",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 20
            },
            "end": {
              "line": 469,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disabled-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is disabled",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 20
            },
            "end": {
              "line": 477,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "finished-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as finished.\nThis only works with a selection mode enabled since the marker replaces the checkbox",
          "sourceRange": {
            "start": {
              "line": 483,
              "column": 20
            },
            "end": {
              "line": 486,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "page",
          "description": "the current page number",
          "sourceRange": {
            "start": {
              "line": 491,
              "column": 20
            },
            "end": {
              "line": 496,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "sort",
          "description": "contains the current sorting criteria, the key \"field\" contains the field name, the field \"order\" a boolean: true is ASC, false is DESC\n{field: String, order: Boolean}",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 20
            },
            "end": {
              "line": 508,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "filter-list",
          "description": "contains the list of filter of the grid.\n* property: the name of the column\n* operator: the value of the operator such as (=, like,..)\n* value: the value need to be filtered",
          "sourceRange": {
            "start": {
              "line": 522,
              "column": 20
            },
            "end": {
              "line": 527,
              "column": 21
            }
          },
          "metadata": {},
          "type": "[{property: string, operator: string, value: mixed}]"
        },
        {
          "name": "query",
          "description": "contains the current search query",
          "sourceRange": {
            "start": {
              "line": 532,
              "column": 20
            },
            "end": {
              "line": 537,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "total-items",
          "description": "stores the number of total items (over all pages)",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 20
            },
            "end": {
              "line": 547,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "hide-column-configuration",
          "description": "if this is true, the column selection switch is hidden and the user can not enable/disable or rearrange columns",
          "sourceRange": {
            "start": {
              "line": 552,
              "column": 20
            },
            "end": {
              "line": 555,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "filter-debounce",
          "description": "if this is true, the request will be debounced when the filter is changed",
          "sourceRange": {
            "start": {
              "line": 560,
              "column": 20
            },
            "end": {
              "line": 563,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items",
          "description": "contains all items that are currently in the grid. You can set this property to manually\nhandle the content of the grid in case you don't want to use the remote loading",
          "sourceRange": {
            "start": {
              "line": 569,
              "column": 20
            },
            "end": {
              "line": 575,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "items-per-page",
          "description": "how mny items to show per page",
          "sourceRange": {
            "start": {
              "line": 580,
              "column": 20
            },
            "end": {
              "line": 583,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "locked-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as locked.",
          "sourceRange": {
            "start": {
              "line": 588,
              "column": 20
            },
            "end": {
              "line": 591,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote",
          "description": "the url to load items from. Alternatively you can use the property `items` to manually add data to the grid,\nhowever that disables the possibility to search, filter, or sort",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 20
            },
            "end": {
              "line": 600,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-path-data",
          "description": "where the items array is located in the remote response.",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 20
            },
            "end": {
              "line": 608,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-path-count",
          "description": "where the total count of items is located in the remote response.",
          "sourceRange": {
            "start": {
              "line": 613,
              "column": 20
            },
            "end": {
              "line": 616,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-params",
          "description": "additional url params to be added to the remote url",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 20
            },
            "end": {
              "line": 626,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "remote-param-filter",
          "description": "this url param is added to the `remote` url containing the user selected filters",
          "sourceRange": {
            "start": {
              "line": 631,
              "column": 20
            },
            "end": {
              "line": 634,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-limit",
          "description": "this url param is added to the `remote` url containing the number of items to be loaded",
          "sourceRange": {
            "start": {
              "line": 639,
              "column": 20
            },
            "end": {
              "line": 642,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-offset",
          "description": "this url param is added to the `remote` url containing the requested page",
          "sourceRange": {
            "start": {
              "line": 647,
              "column": 20
            },
            "end": {
              "line": 650,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-search",
          "description": "this url param is added to the `remote` url containing the search phrase the user entered",
          "sourceRange": {
            "start": {
              "line": 655,
              "column": 20
            },
            "end": {
              "line": 658,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-search-fields",
          "description": "this url param is added to the `remote` url containing the fields that should be searched for `query`",
          "sourceRange": {
            "start": {
              "line": 663,
              "column": 20
            },
            "end": {
              "line": 666,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-serialize-optionals",
          "description": "this url param is added to the `remote` url containing the optional fields.",
          "sourceRange": {
            "start": {
              "line": 671,
              "column": 20
            },
            "end": {
              "line": 674,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-sort",
          "description": "this url parameter is added to the `remote` url containing the user selected sorting. Set this\nto null to sort the data locally",
          "sourceRange": {
            "start": {
              "line": 680,
              "column": 20
            },
            "end": {
              "line": 683,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "paging-disabled",
          "description": "set to true if results should not be paged",
          "sourceRange": {
            "start": {
              "line": 689,
              "column": 20
            },
            "end": {
              "line": 692,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "selection-mode",
          "description": "how rows can be selected. \"multi\" to allow the selection of n elements, \"single\" to allow the\nselection of only a single element (selecting a new one will deselect the previously selected one).\nAny other value will disable the selection model entirely.\nIf a selection mode is enabled, a checkbox is added to the start of each row",
          "sourceRange": {
            "start": {
              "line": 700,
              "column": 20
            },
            "end": {
              "line": 702,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-item",
          "description": "if selectionMode=single, this property contains the selected item if one is selected",
          "sourceRange": {
            "start": {
              "line": 707,
              "column": 20
            },
            "end": {
              "line": 711,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "selected-items",
          "description": "contains all the currently selected items",
          "sourceRange": {
            "start": {
              "line": 716,
              "column": 20
            },
            "end": {
              "line": 722,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "disable-tap-row-to-select",
          "description": "if this is enabled and a selection mode is active, tapping a row will not select it. Rows can then\nonly be selected by explicitely checking their checkboxes",
          "sourceRange": {
            "start": {
              "line": 728,
              "column": 20
            },
            "end": {
              "line": 731,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "page-changed",
          "description": "Fired when the `page` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "sort-changed",
          "description": "Fired when the `sort` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "query-changed",
          "description": "Fired when the `query` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "total-items-changed",
          "description": "Fired when the `totalItems` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-items-changed",
          "description": "Fired when the `selectedItems` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "toolbar",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 319,
              "column": 16
            },
            "end": {
              "line": 319,
              "column": 44
            }
          }
        },
        {
          "description": "",
          "name": "singleActions",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 322,
              "column": 16
            },
            "end": {
              "line": 322,
              "column": 50
            }
          }
        },
        {
          "description": "",
          "name": "multiActions",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 325,
              "column": 16
            },
            "end": {
              "line": 325,
              "column": 49
            }
          }
        }
      ],
      "tagname": "actindo-grid"
    }
  ]
}
