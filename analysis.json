{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-cell-content.html",
      "properties": [
        {
          "name": "row",
          "type": "Object",
          "description": "an object containing all values for this row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 15,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "column",
          "type": "Object",
          "description": "an object containing the column configuration for the cell being rendered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 20
            },
            "end": {
              "line": 23,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "renderValue",
          "description": "renders the content if this cell",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 12
            },
            "end": {
              "line": 107,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "row",
              "type": "{}"
            },
            {
              "name": "column",
              "type": "{field: String, type: {}}"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 8
        },
        "end": {
          "line": 108,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridCellContent",
      "attributes": [
        {
          "name": "row",
          "description": "an object containing all values for this row",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 15,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "column",
          "description": "an object containing the column configuration for the cell being rendered",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 20
            },
            "end": {
              "line": 23,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-cell-content"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-search.html",
      "properties": [
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "userInput",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 35,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "query",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 20
            },
            "end": {
              "line": 41,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onQueryChanged\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "fields",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 20
            },
            "end": {
              "line": 45,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 12
            },
            "end": {
              "line": 54,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onButtonTap",
          "description": "called when the user taps the search button",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 12
            },
            "end": {
              "line": 75,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onQueryChanged",
          "description": "called when the query changes. Let userInput follow this new value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 12
            },
            "end": {
              "line": 85,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "String"
            }
          ]
        },
        {
          "name": "_onSearch",
          "description": "called when the user wishes to search for the current query",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 12
            },
            "end": {
              "line": 105,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onSearchBlur",
          "description": "called when the search input is blurred",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 12
            },
            "end": {
              "line": 120,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 8
        },
        "end": {
          "line": 121,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridSearch",
      "attributes": [
        {
          "name": "collapsed",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "user-input",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 35,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "query",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 20
            },
            "end": {
              "line": 41,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "fields",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 20
            },
            "end": {
              "line": 45,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "query-changed",
          "description": "Fired when the `query` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-search"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-in-option-input.html",
      "properties": [
        {
          "name": "displayField",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 20
            },
            "end": {
              "line": 24,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"label\""
        },
        {
          "name": "valueField",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 20
            },
            "end": {
              "line": 28,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"id\""
        },
        {
          "name": "value",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 34,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 42,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterInOprionInput",
      "attributes": [
        {
          "name": "display-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 20
            },
            "end": {
              "line": 24,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 20
            },
            "end": {
              "line": 28,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {}
        },
        {
          "name": "selected-item",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 34,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-in-option-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-edit.html",
      "properties": [
        {
          "name": "editing",
          "type": "boolean",
          "description": "Whether is editing or not\nWhich means, that one can reselect column in combobox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 20
            },
            "end": {
              "line": 132,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "The status of the filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 20
            },
            "end": {
              "line": 139,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "filter",
          "type": "Object",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed, active: true}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 20
            },
            "end": {
              "line": 150,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"reset\""
            }
          }
        },
        {
          "name": "property",
          "type": "string",
          "description": "contains the column value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 20
            },
            "end": {
              "line": 156,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "operator",
          "type": "string",
          "description": "contains the operator value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 20
            },
            "end": {
              "line": 163,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onOperatorChanged\""
            }
          }
        },
        {
          "name": "value",
          "type": "?",
          "description": "contains the filter value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 20
            },
            "end": {
              "line": 167,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_valueHistory",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 20
            },
            "end": {
              "line": 173,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "_operators",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 20
            },
            "end": {
              "line": 177,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_selectedColumn",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 20
            },
            "end": {
              "line": 181,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onSelectedColumnChanged\""
            }
          }
        },
        {
          "name": "_saveLabel",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 20
            },
            "end": {
              "line": 185,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "filterName",
          "type": "string",
          "description": "the filter name will show on header",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 20
            },
            "end": {
              "line": 191,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_onSelectedColumnChanged",
          "description": "Column selection changes by combobox if allowed or\non custom element initialisation/display",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 204,
              "column": 12
            },
            "end": {
              "line": 217,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newColumn",
              "type": "Object"
            },
            {
              "name": "oldColumn",
              "type": "Object"
            }
          ]
        },
        {
          "name": "_onOperatorChanged",
          "description": "Operator changes by combobox or\non custom element initialisation/display",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 12
            },
            "end": {
              "line": 238,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opt",
              "type": "String",
              "description": "Operator key, like = or < etc."
            }
          ]
        },
        {
          "name": "getColumn",
          "description": "Return column which corresponds to this filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 12
            },
            "end": {
              "line": 258,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object"
          }
        },
        {
          "name": "getOperator",
          "description": "Return operator which corresponds to this filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 12
            },
            "end": {
              "line": 274,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Object"
          }
        },
        {
          "name": "createAndAttachInputComponent",
          "description": "Create NEW inputFilter component for appropriate operator type and attach it to local DOM",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 12
            },
            "end": {
              "line": 310,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise.<Node>"
          }
        },
        {
          "name": "_attachInputComponent",
          "description": "Attach given node as child to #inputFilter tag",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 12
            },
            "end": {
              "line": 344,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node",
              "type": "Node",
              "description": "Custom element for filterin special data type,\n  like actindo-filter-equal-date, actindo-filter-between-date etc."
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createInputComponent",
          "description": "Create and return input filter component of special type\nwithout attaching it to DOM",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 357,
              "column": 12
            },
            "end": {
              "line": 360,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "Object",
              "description": "Column object"
            },
            {
              "name": "operator",
              "type": "Object",
              "description": "Operator object"
            }
          ],
          "return": {
            "type": "Node"
          }
        },
        {
          "name": "_getInputComponent",
          "description": "Get existing input filter component",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 12
            },
            "end": {
              "line": 372,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Node"
          }
        },
        {
          "name": "getDisplayValue",
          "description": "Return display value from input filter component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 12
            },
            "end": {
              "line": 404,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_onValueChanged",
          "description": "Fired, when value inside of input filter component changes\nEventlister is set imperatively\n\nPropagates new value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 414,
              "column": 12
            },
            "end": {
              "line": 432,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "CustomEvent"
            }
          ]
        },
        {
          "name": "_getSaveLabel",
          "description": "Get label for filter button (on filter changes)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 441,
              "column": 12
            },
            "end": {
              "line": 448,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter",
              "type": "Object"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_save",
          "description": "On click of filter (Save/Apply) button",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 12
            },
            "end": {
              "line": 474,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_cancel",
          "description": "On close of filter editing panel",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 479,
              "column": 12
            },
            "end": {
              "line": 482,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "open",
          "description": "Open filter editing panel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 487,
              "column": 12
            },
            "end": {
              "line": 491,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "reset",
          "description": "Set all internal property/operator/value by this.filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 496,
              "column": 12
            },
            "end": {
              "line": 512,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 120,
          "column": 8
        },
        "end": {
          "line": 513,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterEdit",
      "attributes": [
        {
          "name": "editing",
          "description": "Whether is editing or not\nWhich means, that one can reselect column in combobox",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 20
            },
            "end": {
              "line": 132,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "active",
          "description": "The status of the filter",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 20
            },
            "end": {
              "line": 139,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "filter",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed, active: true}",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 20
            },
            "end": {
              "line": 150,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "property",
          "description": "contains the column value",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 20
            },
            "end": {
              "line": 156,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "operator",
          "description": "contains the operator value",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 20
            },
            "end": {
              "line": 163,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "contains the filter value",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 20
            },
            "end": {
              "line": 167,
              "column": 29
            }
          },
          "metadata": {}
        },
        {
          "name": "filter-name",
          "description": "the filter name will show on header",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 20
            },
            "end": {
              "line": 191,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-edit"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter.html",
      "properties": [
        {
          "name": "styleLevel",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 20
            },
            "end": {
              "line": 96,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "filterList",
          "type": "Array",
          "description": "contain all available filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 20
            },
            "end": {
              "line": 104,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "filterColumns",
          "type": "Array",
          "description": "contains all the columns has filterable property equal to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 20
            },
            "end": {
              "line": 110,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_deleteMultiple",
          "description": "Remove all available filter",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 12
            },
            "end": {
              "line": 124,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_createNewFilter",
          "description": "Append a filter to the filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 12
            },
            "end": {
              "line": 132,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_removeFilter",
          "description": "Remove a filter from filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 12
            },
            "end": {
              "line": 140,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_editFilter",
          "description": "Edit a filter of filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 12
            },
            "end": {
              "line": 153,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 87,
          "column": 8
        },
        "end": {
          "line": 154,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilter",
      "attributes": [
        {
          "name": "style-level",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 20
            },
            "end": {
              "line": 96,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "filter-list",
          "description": "contain all available filter",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 20
            },
            "end": {
              "line": 104,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "filter-columns",
          "description": "contains all the columns has filterable property equal to true",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 20
            },
            "end": {
              "line": 110,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "filter-list-changed",
          "description": "Fired when the `filterList` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-between-input.html",
      "properties": [
        {
          "name": "value",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 20
            },
            "end": {
              "line": 48,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 12
            },
            "end": {
              "line": 54,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 8
        },
        "end": {
          "line": 55,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterBetweenInput",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 20
            },
            "end": {
              "line": 48,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-between-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-in-input.html",
      "properties": [
        {
          "name": "_inputValue",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 20
            },
            "end": {
              "line": 76,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_value",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 20
            },
            "end": {
              "line": 82,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "value",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "ENTER",
          "type": "number",
          "description": "Key code for Enter.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 20
            },
            "end": {
              "line": 99,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "13"
        }
      ],
      "methods": [
        {
          "name": "_onKeyPress",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_remove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_computeLabelVisibility",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 121,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ]
        },
        {
          "name": "_computeAlwaysFloatLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 12
            },
            "end": {
              "line": 125,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "len"
            }
          ]
        },
        {
          "name": "_handleEnterEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 135,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_handleBackSpaceEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 12
            },
            "end": {
              "line": 144,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 12
            },
            "end": {
              "line": 149,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 68,
          "column": 8
        },
        "end": {
          "line": 150,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterInInput",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-in-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-item.html",
      "properties": [
        {
          "name": "styleLevel",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all the columns has filterable property equal to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 20
            },
            "end": {
              "line": 96,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "The status of the filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onActiveChanged\""
            }
          }
        },
        {
          "name": "filter",
          "type": "Object",
          "description": "contains the current filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 20
            },
            "end": {
              "line": 112,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onFilterChanged\""
            }
          }
        },
        {
          "name": "_label",
          "type": "string",
          "description": "Internal property, hold the title will show on tag content",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 20
            },
            "end": {
              "line": 118,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_firstLoad",
          "type": "boolean",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 20
            },
            "end": {
              "line": 125,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "_filter",
          "type": "Object",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 20
            },
            "end": {
              "line": 131,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_tagNoCheckBox",
          "type": "boolean",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 20
            },
            "end": {
              "line": 138,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_showEditDialog",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 12
            },
            "end": {
              "line": 151,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onFilterChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 12
            },
            "end": {
              "line": 157,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            }
          ]
        },
        {
          "name": "_onActiveChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 12
            },
            "end": {
              "line": 167,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ]
        },
        {
          "name": "_save",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 12
            },
            "end": {
              "line": 175,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_remove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 12
            },
            "end": {
              "line": 180,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getLabel",
          "description": "Generate and set new label for filter tag used in this item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 12
            },
            "end": {
              "line": 199,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 81,
          "column": 8
        },
        "end": {
          "line": 200,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterItem",
      "attributes": [
        {
          "name": "style-level",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "columns",
          "description": "contains all the columns has filterable property equal to true",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 20
            },
            "end": {
              "line": 96,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "active",
          "description": "The status of the filter",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "filter",
          "description": "contains the current filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 20
            },
            "end": {
              "line": 112,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-item"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-tag.html",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "description": "identification for this tag",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 20
            },
            "end": {
              "line": 92,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "set to true if the filter is active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 20
            },
            "end": {
              "line": 101,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onActiveChanged\""
            }
          }
        },
        {
          "name": "noCheckBox",
          "type": "boolean",
          "description": "if this is true, the checkbox on the left will be hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 20
            },
            "end": {
              "line": 108,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "styleLevel",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 20
            },
            "end": {
              "line": 113,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noRemoveButton",
          "type": "boolean",
          "description": "if this is true, the close icon on the right will be hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 20
            },
            "end": {
              "line": 121,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noSelfRemove",
          "type": "boolean",
          "description": "if this is true, the item will not self-destroyed, the only an \"remove\" event will be fired",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 20
            },
            "end": {
              "line": 129,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_remove",
          "description": "Call when user click on the close icon",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 12
            },
            "end": {
              "line": 157,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onActiveChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 12
            },
            "end": {
              "line": 167,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 81,
          "column": 8
        },
        "end": {
          "line": 168,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterTag",
      "attributes": [
        {
          "name": "id",
          "description": "identification for this tag",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 20
            },
            "end": {
              "line": 92,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "active",
          "description": "set to true if the filter is active",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 20
            },
            "end": {
              "line": 101,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-check-box",
          "description": "if this is true, the checkbox on the left will be hidden",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 20
            },
            "end": {
              "line": 108,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "style-level",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 20
            },
            "end": {
              "line": 113,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "no-remove-button",
          "description": "if this is true, the close icon on the right will be hidden",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 20
            },
            "end": {
              "line": 121,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-self-remove",
          "description": "if this is true, the item will not self-destroyed, the only an \"remove\" event will be fired",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 20
            },
            "end": {
              "line": 129,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "content",
          "range": {
            "file": "actindo-grid-filter-tag.html",
            "start": {
              "line": 70,
              "column": 16
            },
            "end": {
              "line": 70,
              "column": 44
            }
          }
        }
      ],
      "tagname": "actindo-grid-filter-tag"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-equal-date.html",
      "properties": [
        {
          "name": "displayValue",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 20
            },
            "end": {
              "line": 28,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "value",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 33,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onDateSelect\""
            }
          }
        }
      ],
      "methods": [
        {
          "name": "getDisplayValue",
          "description": "Get displayValue\n\nIt is a kind of static functtion, because called sometimes without element initialisation,",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 12
            },
            "end": {
              "line": 50,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_onDateSelect",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 12
            },
            "end": {
              "line": 67,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 8
        },
        "end": {
          "line": 68,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterEqualDate",
      "attributes": [
        {
          "name": "display-value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 26,
              "column": 20
            },
            "end": {
              "line": 28,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 33,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-equal-date"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-between-date.html",
      "properties": [
        {
          "name": "displayValueFrom",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 20
            },
            "end": {
              "line": 41,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "displayValueTo",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 20
            },
            "end": {
              "line": 44,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "value",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 20
            },
            "end": {
              "line": 53,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onInit\""
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "getDisplayValue",
          "description": "Get  displayValue\n\nIt is a kind of static functtion, because called sometimes without element initialisation,",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 12
            },
            "end": {
              "line": 72,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {}
        },
        {
          "name": "getDisplayValuePart",
          "description": "Get part of displayValue\n\nIt is a kind of static functtion, because called sometimes without element initialisation,",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 12
            },
            "end": {
              "line": 87,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_onInit",
          "description": "When date object was replaced from outside and not by date picker\nthen update display values in date pickers",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onFromSelect",
          "description": "When date picker causes changes on FROM value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 126,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onToSelect",
          "description": "When date picker causes changes on TO value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 12
            },
            "end": {
              "line": 140,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 8
        },
        "end": {
          "line": 141,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterBetweenDate",
      "attributes": [
        {
          "name": "display-value-from",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 20
            },
            "end": {
              "line": 41,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "display-value-to",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 20
            },
            "end": {
              "line": 44,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 20
            },
            "end": {
              "line": 53,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-between-date"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-error.html",
      "properties": [
        {
          "name": "message",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 20
            },
            "end": {
              "line": 74,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 69,
          "column": 8
        },
        "end": {
          "line": 77,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridError",
      "attributes": [
        {
          "name": "message",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 20
            },
            "end": {
              "line": 74,
              "column": 35
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-error"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-configurator.html",
      "properties": [
        {
          "name": "active",
          "type": "boolean",
          "description": "set to true if the filter is active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 20
            },
            "end": {
              "line": 63,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onActiveChanged\""
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 12
            },
            "end": {
              "line": 71,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onActiveChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 12
            },
            "end": {
              "line": 80,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 51,
          "column": 8
        },
        "end": {
          "line": 81,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterConfigurator",
      "attributes": [
        {
          "name": "active",
          "description": "set to true if the filter is active",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 20
            },
            "end": {
              "line": 63,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "content",
          "range": {
            "file": "actindo-grid-filter-configurator.html",
            "start": {
              "line": 40,
              "column": 12
            },
            "end": {
              "line": 40,
              "column": 40
            }
          }
        }
      ],
      "tagname": "actindo-grid-filter-configurator"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-form.html",
      "properties": [
        {
          "name": "editing",
          "type": "boolean",
          "description": "Whether is editing or not",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 20
            },
            "end": {
              "line": 76,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "The status of the filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 20
            },
            "end": {
              "line": 83,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all the columns has filterable property equal to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "filter",
          "type": "Object",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 20
            },
            "end": {
              "line": 97,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "property",
          "type": "string",
          "description": "contains the column value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "operator",
          "type": "string",
          "description": "contains the operator value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 20
            },
            "end": {
              "line": 110,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onOperatorChanged\""
            }
          }
        },
        {
          "name": "value",
          "type": "?",
          "description": "contains the filter value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 20
            },
            "end": {
              "line": 114,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_valueHistory",
          "type": "Object",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 20
            },
            "end": {
              "line": 123,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "_operators",
          "type": "Array",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 20
            },
            "end": {
              "line": 130,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_selectedColumn",
          "type": "Object",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 20
            },
            "end": {
              "line": 137,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onSelectedColumnChanged\""
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_onSelectedColumnChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newColumn"
            },
            {
              "name": "oldColumn"
            }
          ]
        },
        {
          "name": "_onOperatorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 12
            },
            "end": {
              "line": 183,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opt"
            }
          ]
        },
        {
          "name": "getInputComponent",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 12
            },
            "end": {
              "line": 204,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            },
            {
              "name": "operator"
            }
          ]
        },
        {
          "name": "_onValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 12
            },
            "end": {
              "line": 224,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_save",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 226,
              "column": 12
            },
            "end": {
              "line": 249,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "reset",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 12
            },
            "end": {
              "line": 260,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 65,
          "column": 8
        },
        "end": {
          "line": 261,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterForm",
      "attributes": [
        {
          "name": "editing",
          "description": "Whether is editing or not",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 20
            },
            "end": {
              "line": 76,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "active",
          "description": "The status of the filter",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 20
            },
            "end": {
              "line": 83,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "columns",
          "description": "contains all the columns has filterable property equal to true",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "filter",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "sourceRange": {
            "start": {
              "line": 95,
              "column": 20
            },
            "end": {
              "line": 97,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "property",
          "description": "contains the column value",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "operator",
          "description": "contains the operator value",
          "sourceRange": {
            "start": {
              "line": 107,
              "column": 20
            },
            "end": {
              "line": 110,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "contains the filter value",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 20
            },
            "end": {
              "line": 114,
              "column": 29
            }
          },
          "metadata": {}
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-form"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-boolean.html",
      "properties": [
        {
          "name": "checked",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 20
            },
            "end": {
              "line": 21,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "value",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 20
            },
            "end": {
              "line": 26,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_getValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 12
            },
            "end": {
              "line": 33,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "checked"
            }
          ]
        },
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 12
            },
            "end": {
              "line": 38,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 8
        },
        "end": {
          "line": 39,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterBoolean",
      "attributes": [
        {
          "name": "checked",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 20
            },
            "end": {
              "line": 21,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 20
            },
            "end": {
              "line": 26,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-boolean"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-columns.html",
      "properties": [
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all the columns",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 20
            },
            "end": {
              "line": 141,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onColumnsChanged\""
            }
          }
        },
        {
          "name": "styleLevel",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 20
            },
            "end": {
              "line": 145,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_columns",
          "type": "Array",
          "description": "Internal property, contains all the columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 20
            },
            "end": {
              "line": 152,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "_displayColumns",
          "type": "Array",
          "description": "Internal property, contains all display columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 20
            },
            "end": {
              "line": 158,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_hiddenColumns",
          "type": "Array",
          "description": "Internal property, contains all hidden columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 20
            },
            "end": {
              "line": 164,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_columnKey",
          "type": "string",
          "description": "Internal property, key of the selected column",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 20
            },
            "end": {
              "line": 170,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_columnPosition",
          "type": "Object",
          "description": "Internal property, list position by column field value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 20
            },
            "end": {
              "line": 176,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_notAllowedRemoving",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 20
            },
            "end": {
              "line": 180,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "lifecycle and initialization",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 12
            },
            "end": {
              "line": 189,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_sortBrokenDomOrderManually",
          "description": "Polymer's dom-repeat seems to have problems in junction with Sortable.js,\nwhen changing local dom:\n\"dom-repeat was not designed to deal with it's dom being modified by something other than itself\"",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 12
            },
            "end": {
              "line": 241,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onColumnsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 12
            },
            "end": {
              "line": 258,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newColumns"
            },
            {
              "name": "oldColumns"
            }
          ]
        },
        {
          "name": "_onAddColumn",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 260,
              "column": 12
            },
            "end": {
              "line": 274,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_updateColumnPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 12
            },
            "end": {
              "line": 282,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayColumns"
            }
          ]
        },
        {
          "name": "_onApply",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 12
            },
            "end": {
              "line": 287,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onRemove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 12
            },
            "end": {
              "line": 300,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_getColumnPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 302,
              "column": 12
            },
            "end": {
              "line": 306,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "indexList"
            },
            {
              "name": "field"
            }
          ]
        },
        {
          "name": "_onDragFinish",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 12
            },
            "end": {
              "line": 316,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_isNotAllowedRemoving",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 12
            },
            "end": {
              "line": 321,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayColumnsLength"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 130,
          "column": 8
        },
        "end": {
          "line": 322,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGridFilterColumns",
      "attributes": [
        {
          "name": "columns",
          "description": "contains all the columns",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 20
            },
            "end": {
              "line": 141,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "style-level",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 20
            },
            "end": {
              "line": 145,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "columns-changed",
          "description": "Fired when the `columns` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-columns"
    },
    {
      "description": "`<actindo-grid>` implements a highly reusable data grid to display your data.\n\n### Features\n\n- column configuration as property, therefore dynamic column changes are propagated through data binding\n- global search bar (hidden if no column is configured to be `searchable`)\n- filter panel (hidden if no column is configured to be `filterable`)\n- sorting (by every column that is configured to be `sortable`)\n- pagination as long as a `remote` is specified to fetch data from\n- remote loading of data, including sorting, paging, searching, filtering\n- static data display (disables pagination)\n- custom cell formatting through `render` callbacks\n- hidden columns that can be shown manually",
      "summary": "",
      "path": "actindo-grid.html",
      "properties": [
        {
          "name": "styleLevel",
          "type": "number",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 759,
              "column": 20
            },
            "end": {
              "line": 763,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "0"
        },
        {
          "name": "columnConfiguration",
          "type": "[{label: string, field: string, type: mixed, identifying: bool, hidden: bool, searchable: bool, sortable: bool, filterable: bool, resizable: bool, render: function, renderDefaultFilter: function, nullMessage: string}]",
          "description": "contains the columns and their configuration.\n* label: the name of this column, used in the header\n* field: data index where this columns value is located\n* type: the data type of this column, can be any valid javascript type\n* identifying: if this column contains a unique key that identifies the single rows. _One_ column must have this if you want to use a selection mode\n* hidden: if this column is hidden by default and needs to be enabled manually\n* searchable: if this field is searched through the global search field. Defaults to false\n* sortable: if the grid can by sorted by this field. Defaults to false\n* filterable: if the grid can be filtered by this columns values\n* resizable: if this column is resizable\n* render: Optional callback that is given the columns value for each row and has to return a DOMElement to be displayed\n* renderDefaultFilter: return a DOMElement element to be displayed\n* nullMessage: Text shown if field is null; if nothing specified it will display empty string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 795,
              "column": 20
            },
            "end": {
              "line": 801,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "emptyMessage",
          "type": "string",
          "description": "if grid has no items this message will be shown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 806,
              "column": 20
            },
            "end": {
              "line": 809,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "disabledField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is disabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 814,
              "column": 20
            },
            "end": {
              "line": 817,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_disabled\""
        },
        {
          "name": "finishedField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as finished.\nThis only works with a selection mode enabled since the marker replaces the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 823,
              "column": 20
            },
            "end": {
              "line": 826,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_finished\""
        },
        {
          "name": "page",
          "type": "number",
          "description": "the current page number",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 831,
              "column": 20
            },
            "end": {
              "line": 836,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onPageChanged\""
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "sort",
          "type": "Object",
          "description": "contains the current sorting criteria, the key \"field\" contains the field name, the field \"order\" a boolean: true is ASC, false is DESC\n{field: String, order: Boolean}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 842,
              "column": 20
            },
            "end": {
              "line": 849,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onSortChanged\""
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "filterList",
          "type": "[{property: string, operator: string, value: mixed}]",
          "description": "contains the list of filter of the grid.\n* property: the name of the column\n* operator: the value of the operator such as (=, like,..)\n* value: the value need to be filtered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 863,
              "column": 20
            },
            "end": {
              "line": 869,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "query",
          "type": "string",
          "description": "contains the current search query",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 874,
              "column": 20
            },
            "end": {
              "line": 879,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onQueryChanged\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "totalItems",
          "type": "number",
          "description": "stores the number of total items (over all pages)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 884,
              "column": 20
            },
            "end": {
              "line": 889,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "hideColumnConfiguration",
          "type": "boolean",
          "description": "if this is true, the column selection switch is hidden and the user can not enable/disable or rearrange columns",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 894,
              "column": 20
            },
            "end": {
              "line": 897,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "debounced",
          "type": "boolean",
          "description": "Whether the request debounced or not",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 902,
              "column": 20
            },
            "end": {
              "line": 905,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "items",
          "type": "Array",
          "description": "contains all items that are currently in the grid. You can set this property to manually\nhandle the content of the grid in case you don't want to use the remote loading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 911,
              "column": 20
            },
            "end": {
              "line": 917,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "lockedField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as locked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 922,
              "column": 20
            },
            "end": {
              "line": 925,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_locked\""
        },
        {
          "name": "remote",
          "type": "string",
          "description": "the url to load items from. Alternatively you can use the property `items` to manually add data to the grid,\nhowever that disables the possibility to search, filter, or sort",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 931,
              "column": 20
            },
            "end": {
              "line": 934,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "remotePathData",
          "type": "string",
          "description": "where the items array is located in the remote response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 939,
              "column": 20
            },
            "end": {
              "line": 942,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"data\""
        },
        {
          "name": "remotePathCount",
          "type": "string",
          "description": "where the total count of items is located in the remote response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 947,
              "column": 20
            },
            "end": {
              "line": 950,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"n_rows\""
        },
        {
          "name": "remoteParams",
          "type": "Object",
          "description": "additional url params to be added to the remote url",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 955,
              "column": 20
            },
            "end": {
              "line": 960,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "remoteParamFilter",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the user selected filters",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 965,
              "column": 20
            },
            "end": {
              "line": 968,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"filter\""
        },
        {
          "name": "remoteParamLimit",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the number of items to be loaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 973,
              "column": 20
            },
            "end": {
              "line": 976,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"limit\""
        },
        {
          "name": "remoteParamOffset",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the requested page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 981,
              "column": 20
            },
            "end": {
              "line": 984,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"start\""
        },
        {
          "name": "remoteParamSearch",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the search phrase the user entered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 989,
              "column": 20
            },
            "end": {
              "line": 992,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"query\""
        },
        {
          "name": "remoteParamSearchFields",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the fields that should be searched for `query`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 997,
              "column": 20
            },
            "end": {
              "line": 1000,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"fields\""
        },
        {
          "name": "remoteParamSerializeOptionals",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the optional fields.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1005,
              "column": 20
            },
            "end": {
              "line": 1008,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"serializeOptionals\""
        },
        {
          "name": "remoteParamSort",
          "type": "string",
          "description": "this url parameter is added to the `remote` url containing the user selected sorting. Set this\nto null to sort the data locally",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1014,
              "column": 20
            },
            "end": {
              "line": 1017,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"sort\""
        },
        {
          "name": "pagingDisabled",
          "type": "boolean",
          "description": "set to true if results should not be paged",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1023,
              "column": 20
            },
            "end": {
              "line": 1026,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "selectionMode",
          "type": "string",
          "description": "how rows can be selected. \"multi\" to allow the selection of n elements, \"single\" to allow the\nselection of only a single element (selecting a new one will deselect the previously selected one).\nAny other value will disable the selection model entirely.\nIf a selection mode is enabled, a checkbox is added to the start of each row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1034,
              "column": 20
            },
            "end": {
              "line": 1036,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "if selectionMode=single, this property contains the selected item if one is selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1041,
              "column": 20
            },
            "end": {
              "line": 1045,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"onSelectedItemChanged\""
            }
          }
        },
        {
          "name": "selectedItems",
          "type": "Array",
          "description": "contains all the currently selected items",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1050,
              "column": 20
            },
            "end": {
              "line": 1056,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "disableTapRowToSelect",
          "type": "boolean",
          "description": "if this is enabled and a selection mode is active, tapping a row will not select it. Rows can then\nonly be selected by explicitely checking their checkboxes",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1062,
              "column": 20
            },
            "end": {
              "line": 1065,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "showCreateButton",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1067,
              "column": 20
            },
            "end": {
              "line": 1070,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "showMultiActions",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1072,
              "column": 20
            },
            "end": {
              "line": 1075,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_multiActionsActive",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1077,
              "column": 20
            },
            "end": {
              "line": 1081,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_multiActionsActiveChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "multiActions",
          "type": "Array",
          "description": "array of multi actions in list; example of a single action {icon: \"add\", label: \"create\", \"event\": \"create\"}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1086,
              "column": 20
            },
            "end": {
              "line": 1088,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "disableCreateButton",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1090,
              "column": 20
            },
            "end": {
              "line": 1093,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "itemsPerPageList",
          "type": "Array",
          "description": "List of items per page used for dom-repeat in dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1098,
              "column": 20
            },
            "end": {
              "line": 1103,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[5,10,25,50,100]"
        },
        {
          "name": "_columns",
          "type": "Array",
          "description": "internal property that holds the processed columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1109,
              "column": 20
            },
            "end": {
              "line": 1115,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "_filterColumns",
          "type": "Array",
          "description": "holds the colmumn has filterable is true",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1120,
              "column": 20
            },
            "end": {
              "line": 1123,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_lastSelectedIndizes",
          "type": "Array",
          "description": "Holds indizes of last selected items; we need that for proper handling of shift",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1129,
              "column": 20
            },
            "end": {
              "line": 1132,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_identifyingColumn",
          "type": "Object",
          "description": "holds the colmumn that is marked as identifying",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1137,
              "column": 20
            },
            "end": {
              "line": 1139,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_displayColumns",
          "type": "Array",
          "description": "holds the column has hidden is false",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1144,
              "column": 20
            },
            "end": {
              "line": 1147,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_everythingSelected",
          "type": "boolean",
          "description": "property that controls the checked state of the \"select all checkbox\" in selectionMode=multi",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1152,
              "column": 20
            },
            "end": {
              "line": 1155,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_partiallySelected",
          "type": "boolean",
          "description": "property that indicates if a partial selection is active (at least one item, but not all)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1160,
              "column": 20
            },
            "end": {
              "line": 1163,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_xhr",
          "type": "Object",
          "description": "current xhr request",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1168,
              "column": 20
            },
            "end": {
              "line": 1170,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_error",
          "type": "boolean",
          "description": "property that indicates if a xhr request is failed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1175,
              "column": 21
            },
            "end": {
              "line": 1178,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_pages",
          "type": "Array",
          "description": "List of pages used for dom-repeat in dropdown to change current page",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1183,
              "column": 20
            },
            "end": {
              "line": 1186,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_itemsPerPage",
          "type": "number",
          "description": "how many items to show per page",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1191,
              "column": 20
            },
            "end": {
              "line": 1195,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onItemsPerPageChanged\""
            }
          },
          "defaultValue": "25"
        },
        {
          "name": "_serializeOptionals",
          "type": "Array",
          "description": "List of the optional column. The hidden column will not be in this list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1200,
              "column": 20
            },
            "end": {
              "line": 1203,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_loadedColumns",
          "type": "Array",
          "description": "List of the loaded column",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1208,
              "column": 20
            },
            "end": {
              "line": 1211,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "title",
          "type": "string",
          "description": "the title will show on headline",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1216,
              "column": 20
            },
            "end": {
              "line": 1218,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "header",
          "type": "string",
          "description": "internal property, the title  will show on headline",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1223,
              "column": 20
            },
            "end": {
              "line": 1225,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_showFilterArea",
          "type": "boolean",
          "description": "internal property, set to true if the filter area will show",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1230,
              "column": 20
            },
            "end": {
              "line": 1234,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_showColumnsArea",
          "type": "boolean",
          "description": "internal property, set to true if the columns area will show",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1239,
              "column": 20
            },
            "end": {
              "line": 1243,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "multiLineHeader",
          "type": "boolean",
          "description": "property that indicates header will display one line (single) or two line (multi)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1248,
              "column": 20
            },
            "end": {
              "line": 1251,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_isProcessingInitLayout",
          "type": "boolean",
          "description": "internal property, set to true if it is processing init layout",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1256,
              "column": 20
            },
            "end": {
              "line": 1259,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_isFirstTimeRenderLayout",
          "type": "boolean",
          "description": "internal property, whether first time render layout or not",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1264,
              "column": 21
            },
            "end": {
              "line": 1267,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "rowClickMode",
          "type": "string",
          "description": "how rows can be click.\n\"double\" will fire click event when user double click on row, a single click still allows to select a row\n\"single\" will fire click event when user click on row, to select a row should select on checkbox\nAny other value will disable row-click-actions",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1275,
              "column": 20
            },
            "end": {
              "line": 1277,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "entityIdentifyingField",
          "type": "string",
          "description": "this field contains an identifier of some sort that uniqely identifies the entity (the \"class\", not the object!)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1282,
              "column": 20
            },
            "end": {
              "line": 1285,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_E\""
        },
        {
          "name": "_containedEntities",
          "type": "Array",
          "description": "collection of all values of \"entityIdentifyingField\" currently in this grid (usually this will only be 1\nbut you may have grids displaying objects of different types)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1291,
              "column": 20
            },
            "end": {
              "line": 1296,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "itemUpdateEventName",
          "type": "string",
          "description": "if an event with this name is fired on `document`, that event is caught and parsed for updates:\nIf it contains an item that identifies as the same item that this grid is currently showing, that item\nis updated locally. It is regarded as \"the same item\" if the values of the \"entityIdentifyingField\"\nand the value of the \"_identifyingColumn.field\" match.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1306,
              "column": 20
            },
            "end": {
              "line": 1309,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"actindo-entity-update\""
        },
        {
          "name": "frozenByField",
          "type": "string",
          "description": "if an item has a property with this name that evaluates to true, it is considered frozen and displayed\naccordingly. The contents of this field is displayed as \"locker\" (i.e.: locked by [[frozenByName]])",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1315,
              "column": 20
            },
            "end": {
              "line": 1318,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"frozenByName\""
        }
      ],
      "methods": [
        {
          "name": "_getStyleLevelUp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1322,
              "column": 12
            },
            "end": {
              "line": 1325,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "styleLevel"
            }
          ]
        },
        {
          "name": "firstPage",
          "description": "loads the first page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1334,
              "column": 12
            },
            "end": {
              "line": 1336,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "lastPage",
          "description": "loads the last page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1341,
              "column": 12
            },
            "end": {
              "line": 1343,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "nextPage",
          "description": "loads the next page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1348,
              "column": 12
            },
            "end": {
              "line": 1350,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "previousPage",
          "description": "loads the previous page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1355,
              "column": 12
            },
            "end": {
              "line": 1357,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "refresh",
          "description": "reloads the grid data from the remote",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1362,
              "column": 12
            },
            "end": {
              "line": 1409,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "debounced = true"
            }
          ]
        },
        {
          "name": "clearFilters",
          "description": "Removes all filters",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1414,
              "column": 12
            },
            "end": {
              "line": 1417,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getFilters",
          "description": "Returns list of all filters (active/inactive)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1423,
              "column": 12
            },
            "end": {
              "line": 1426,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array"
          }
        },
        {
          "name": "addFilter",
          "description": "Adds a filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1436,
              "column": 12
            },
            "end": {
              "line": 1450,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field",
              "type": "String"
            },
            {
              "name": "operator",
              "type": "String"
            },
            {
              "name": "value",
              "type": "*"
            },
            {
              "name": "active",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "success"
          }
        },
        {
          "name": "getVisibleFields",
          "description": "Returns array containing all fields that are visible",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1456,
              "column": 12
            },
            "end": {
              "line": 1467,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array"
          }
        },
        {
          "name": "showColumnByFieldName",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1473,
              "column": 12
            },
            "end": {
              "line": 1479,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName",
              "type": "String",
              "description": "Shows column with corresponding fieldName if existing"
            }
          ]
        },
        {
          "name": "hideColumnByFieldName",
          "description": "Hides column with corresponding fieldName if visible",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1484,
              "column": 12
            },
            "end": {
              "line": 1490,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName"
            }
          ]
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1508,
              "column": 12
            },
            "end": {
              "line": 1515,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1517,
              "column": 12
            },
            "end": {
              "line": 1533,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1535,
              "column": 12
            },
            "end": {
              "line": 1542,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "setColumnToPositionIndex",
          "description": "Moves columns to new position",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1617,
              "column": 12
            },
            "end": {
              "line": 1629,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName",
              "type": "String"
            },
            {
              "name": "newIndex",
              "type": "Number"
            }
          ]
        },
        {
          "name": "getColumnWidth",
          "description": "Get width in px of a column",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1635,
              "column": 12
            },
            "end": {
              "line": 1644,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "setColumnWidth",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1650,
              "column": 12
            },
            "end": {
              "line": 1659,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName",
              "type": "String",
              "description": "field of the column to be resized"
            },
            {
              "name": "width",
              "type": "Number",
              "description": "in px"
            }
          ]
        },
        {
          "name": "_onRefreshTap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1661,
              "column": 12
            },
            "end": {
              "line": 1664,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onScroll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1666,
              "column": 12
            },
            "end": {
              "line": 1672,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onScrollHeader",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1677,
              "column": 12
            },
            "end": {
              "line": 1683,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onGridHeaderMouseOver",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1688,
              "column": 12
            },
            "end": {
              "line": 1691,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onGridBodyMouseOver",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1696,
              "column": 12
            },
            "end": {
              "line": 1699,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_showMultiActions",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1705,
              "column": 12
            },
            "end": {
              "line": 1708,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "multiActionsLength"
            }
          ]
        },
        {
          "name": "_positionCreateButton",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1713,
              "column": 12
            },
            "end": {
              "line": 1735,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_initLayout",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1740,
              "column": 12
            },
            "end": {
              "line": 1830,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_initColumnResizing",
          "description": "sets up the column resizing handlers",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1836,
              "column": 12
            },
            "end": {
              "line": 1874,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resizeColumn",
          "description": "Performs column resizing;",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1881,
              "column": 12
            },
            "end": {
              "line": 1901,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list",
              "type": "Array",
              "description": "of table cells of that column in all rows and header"
            },
            {
              "name": "width",
              "type": "Number",
              "description": "in px"
            }
          ]
        },
        {
          "name": "setSortOrder",
          "description": "Initialize sorting",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1908,
              "column": 12
            },
            "end": {
              "line": 1925,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName",
              "type": "String"
            },
            {
              "name": "order",
              "type": "String",
              "description": "ASC or DESC not case sensitive"
            }
          ]
        },
        {
          "name": "removeSorting",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1927,
              "column": 12
            },
            "end": {
              "line": 1930,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onSortChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1936,
              "column": 12
            },
            "end": {
              "line": 1939,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_inactiveFilterChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1941,
              "column": 12
            },
            "end": {
              "line": 1944,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onHeadTapped",
          "description": "called when the table head is tapped. Check if the tapped column is sortable and if so, sort by it",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1950,
              "column": 12
            },
            "end": {
              "line": 2006,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onQueryChanged",
          "description": "called when the property `query` changes. Set page to 1",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2012,
              "column": 12
            },
            "end": {
              "line": 2014,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isCheckBox",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2020,
              "column": 12
            },
            "end": {
              "line": 2023,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event",
              "description": "Checks if click target is a checkbox or the container around"
            }
          ]
        },
        {
          "name": "_handleSelect",
          "description": "Handles click on an currently not selected item",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2031,
              "column": 12
            },
            "end": {
              "line": 2099,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            },
            {
              "name": "index",
              "type": "Number"
            }
          ]
        },
        {
          "name": "_onRowTap",
          "description": "called when a row in the table is tapped. If row tapping should select the row and a selection mode\nis active, the tapped row is selected",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2106,
              "column": 12
            },
            "end": {
              "line": 2155,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "onSelectedItemChanged",
          "description": "called when the selected item changes (selection mode = single). Updates the selectedItems property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 2162,
              "column": 12
            },
            "end": {
              "line": 2173,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "{}",
              "description": "the newly selected item"
            }
          ]
        },
        {
          "name": "_toggleAllSelection",
          "description": "called when the \"select all\" checkbox is tapped. Toggles the selection of all items",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2179,
              "column": 12
            },
            "end": {
              "line": 2202,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onItemsChanged",
          "description": "called when the items property changes. Move it to _items and make sure to properly\npropagate the change.\nUnfortunately a copy of th original item has to be created to make polymer aware of this change.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2212,
              "column": 12
            },
            "end": {
              "line": 2253,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change",
              "type": "{path: String, base: []}"
            }
          ]
        },
        {
          "name": "_onPageChanged",
          "description": "called when a new page is set. Make sure it's within the possible bounds",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2261,
              "column": 12
            },
            "end": {
              "line": 2266,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "Number"
            }
          ]
        },
        {
          "name": "_onSelectionChanged",
          "description": "called when the selected items change. Fires an event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2272,
              "column": 12
            },
            "end": {
              "line": 2276,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_attachOperatorToColumn",
          "description": "attach operator property to column object",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2282,
              "column": 12
            },
            "end": {
              "line": 2302,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ]
        },
        {
          "name": "_onColumnConfigurationChanged",
          "description": "call when column configuration change",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2309,
              "column": 12
            },
            "end": {
              "line": 2338,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columns"
            }
          ]
        },
        {
          "name": "_checkIdentifyColumn",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2340,
              "column": 12
            },
            "end": {
              "line": 2354,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            }
          ]
        },
        {
          "name": "_consolidateColumns",
          "description": "called when the columnConfiguration changes. Process the columns and copy them to the internal\n_columns property.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2363,
              "column": 12
            },
            "end": {
              "line": 2397,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columnConfiguration",
              "type": "{base: []}"
            }
          ]
        },
        {
          "name": "_buildRequest",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2399,
              "column": 12
            },
            "end": {
              "line": 2449,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "remoteParamSerializeOptionals"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filter"
            },
            {
              "name": "serializeOptionals"
            }
          ]
        },
        {
          "name": "_load",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2451,
              "column": 12
            },
            "end": {
              "line": 2498,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "remoteParamSerializeOptionals"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filter"
            },
            {
              "name": "serializeOptionals"
            }
          ]
        },
        {
          "name": "_onFilterChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2500,
              "column": 12
            },
            "end": {
              "line": 2523,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filterList"
            }
          ]
        },
        {
          "name": "_onRemoteChanged",
          "description": "called on explicit refresh or if any of the parameter changes that require a reload from the remote",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2529,
              "column": 12
            },
            "end": {
              "line": 2535,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "remoteParamSerializeOptionals"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filterList = []"
            },
            {
              "name": "serializeOptionals"
            }
          ]
        },
        {
          "name": "_loadDebounced",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2537,
              "column": 12
            },
            "end": {
              "line": 2562,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "remoteParamSerializeOptionals"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filterList"
            },
            {
              "name": "serializeOptionals"
            }
          ]
        },
        {
          "name": "_onCreateClick",
          "description": "Called when create button clicked",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2569,
              "column": 12
            },
            "end": {
              "line": 2571,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onMultiActionClick",
          "description": "Callback of click event of an action button",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2578,
              "column": 12
            },
            "end": {
              "line": 2588,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "Event"
            }
          ]
        },
        {
          "name": "_onMultiActionsClick",
          "description": "Callback of click event of + button of multi actions",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2594,
              "column": 12
            },
            "end": {
              "line": 2607,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_multiActionsActiveChanged",
          "description": "Observer of _multiActionsActive property; handles animation timings",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2614,
              "column": 12
            },
            "end": {
              "line": 2645,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue",
              "type": "Boolean"
            }
          ]
        },
        {
          "name": "_onItemsPerPageChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2650,
              "column": 12
            },
            "end": {
              "line": 2655,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isItemsPerPageSelected",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2660,
              "column": 12
            },
            "end": {
              "line": 2662,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem"
            }
          ]
        },
        {
          "name": "_onItemUpdate",
          "description": "this is called when we receive updated data (i.e. any entity was changed - system wide). Now we'll check\nif that entity is currently being displayed in this grid, and if it is, we change all the updated data\nso this grid reflects the changes.\nTo check if the received entity is an item in our grid, we check if both \"entityIdentifyingField\" and\n\"_identifyingColumn.field\" exist on the received entity and in one of our grid items. If both match, it's\nthe same entity and we update it.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2675,
              "column": 12
            },
            "end": {
              "line": 2721,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "{detail: {}}"
            }
          ]
        },
        {
          "name": "_serialize",
          "description": "takes the given object and creates an http query string from it\nusage: let str = _serialize({foo: 'bar', baz: ['a', 'b']}); => 'foo=bar&baz[0]=a&baz[1]=b'",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2736,
              "column": 12
            },
            "end": {
              "line": 2747,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj",
              "type": "{}",
              "description": "the object to serialize"
            },
            {
              "name": "prefix",
              "type": "String",
              "description": "internal only (used in recursive calls for nested objects)"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_arrayLengthEquals",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2753,
              "column": 12
            },
            "end": {
              "line": 2760,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            },
            {
              "name": "equals"
            }
          ]
        },
        {
          "name": "_arrayLengthGT",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2762,
              "column": 12
            },
            "end": {
              "line": 2769,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            },
            {
              "name": "gt"
            }
          ]
        },
        {
          "name": "_canPageBackward",
          "description": "checks if the user can page backwards",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2778,
              "column": 12
            },
            "end": {
              "line": 2780,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the current page"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_canPageForward",
          "description": "checks if the user can page forwards",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2791,
              "column": 12
            },
            "end": {
              "line": 2793,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the current page"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems",
              "type": "Number",
              "description": "how mnay items are in the grid in total"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_displayFrozenInfo",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2795,
              "column": 12
            },
            "end": {
              "line": 2806,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            },
            {
              "name": "frozenByField"
            }
          ]
        },
        {
          "name": "_getItemsFrom",
          "description": "calculates the offset for the pagination query",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2816,
              "column": 12
            },
            "end": {
              "line": 2818,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the page to calculate the offset for"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_getItemsTo",
          "description": "returns the index of the last item on the given page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2827,
              "column": 12
            },
            "end": {
              "line": 2829,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the pag to calculate the last index for"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems"
            }
          ]
        },
        {
          "name": "_evaluatesTrue",
          "description": "checks if the given value evaluates to true",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2838,
              "column": 12
            },
            "end": {
              "line": 2840,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isColumnVisibile",
          "description": "determines if the given column is visible",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2849,
              "column": 12
            },
            "end": {
              "line": 2851,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "{hidden: bool}"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isItemSelected",
          "description": "checks if the given item is selected",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2861,
              "column": 12
            },
            "end": {
              "line": 2863,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "{}",
              "description": "one item from the current data array"
            },
            {
              "name": "selectedItems",
              "type": "[]",
              "description": "an array of currently selected items"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isSearchHidden",
          "description": "checks if the grid search should be hidden. This is the case when no remote is configured\nor if no column is marked as searchable",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2874,
              "column": 12
            },
            "end": {
              "line": 2887,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote",
              "type": "String"
            },
            {
              "name": "columns",
              "type": "{}"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isSortedBy",
          "description": "checks if the grid is currently sorted by the given column",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2897,
              "column": 12
            },
            "end": {
              "line": 2903,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "{field: String}",
              "description": "the column to check"
            },
            {
              "name": "sort",
              "type": "{field: String}",
              "description": "the current sorting array"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_propertyEvaluatesTrue",
          "description": "determines if the given field evaluates to true in the given item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2911,
              "column": 12
            },
            "end": {
              "line": 2921,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field",
              "type": "String"
            },
            {
              "name": "item",
              "type": "{}"
            }
          ]
        },
        {
          "name": "_stringEquals",
          "description": "checks if the given string equals one or more given strings. The first given parameter is the value to\nlook for, it is compared with oll other given params and if one of them matches, true is returned; otherwise\nfalse",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2931,
              "column": 12
            },
            "end": {
              "line": 2942,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_onClickFilterIcon",
          "description": "when click filter icon will show or hide filter area",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2947,
              "column": 12
            },
            "end": {
              "line": 2950,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onClickColumnIcon",
          "description": "when click column icon will show or hide columns area",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2955,
              "column": 12
            },
            "end": {
              "line": 2958,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isHeaderSingleMode",
          "description": "check header mode display is single or multi, default is single",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2964,
              "column": 12
            },
            "end": {
              "line": 2966,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 753,
          "column": 8
        },
        "end": {
          "line": 2967,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "ActindoGrid",
      "attributes": [
        {
          "name": "style-level",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 759,
              "column": 20
            },
            "end": {
              "line": 763,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "column-configuration",
          "description": "contains the columns and their configuration.\n* label: the name of this column, used in the header\n* field: data index where this columns value is located\n* type: the data type of this column, can be any valid javascript type\n* identifying: if this column contains a unique key that identifies the single rows. _One_ column must have this if you want to use a selection mode\n* hidden: if this column is hidden by default and needs to be enabled manually\n* searchable: if this field is searched through the global search field. Defaults to false\n* sortable: if the grid can by sorted by this field. Defaults to false\n* filterable: if the grid can be filtered by this columns values\n* resizable: if this column is resizable\n* render: Optional callback that is given the columns value for each row and has to return a DOMElement to be displayed\n* renderDefaultFilter: return a DOMElement element to be displayed\n* nullMessage: Text shown if field is null; if nothing specified it will display empty string",
          "sourceRange": {
            "start": {
              "line": 795,
              "column": 20
            },
            "end": {
              "line": 801,
              "column": 21
            }
          },
          "metadata": {},
          "type": "[{label: string, field: string, type: mixed, identifying: bool, hidden: bool, searchable: bool, sortable: bool, filterable: bool, resizable: bool, render: function, renderDefaultFilter: function, nullMessage: string}]"
        },
        {
          "name": "empty-message",
          "description": "if grid has no items this message will be shown",
          "sourceRange": {
            "start": {
              "line": 806,
              "column": 20
            },
            "end": {
              "line": 809,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disabled-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is disabled",
          "sourceRange": {
            "start": {
              "line": 814,
              "column": 20
            },
            "end": {
              "line": 817,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "finished-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as finished.\nThis only works with a selection mode enabled since the marker replaces the checkbox",
          "sourceRange": {
            "start": {
              "line": 823,
              "column": 20
            },
            "end": {
              "line": 826,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "page",
          "description": "the current page number",
          "sourceRange": {
            "start": {
              "line": 831,
              "column": 20
            },
            "end": {
              "line": 836,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "sort",
          "description": "contains the current sorting criteria, the key \"field\" contains the field name, the field \"order\" a boolean: true is ASC, false is DESC\n{field: String, order: Boolean}",
          "sourceRange": {
            "start": {
              "line": 842,
              "column": 20
            },
            "end": {
              "line": 849,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "filter-list",
          "description": "contains the list of filter of the grid.\n* property: the name of the column\n* operator: the value of the operator such as (=, like,..)\n* value: the value need to be filtered",
          "sourceRange": {
            "start": {
              "line": 863,
              "column": 20
            },
            "end": {
              "line": 869,
              "column": 21
            }
          },
          "metadata": {},
          "type": "[{property: string, operator: string, value: mixed}]"
        },
        {
          "name": "query",
          "description": "contains the current search query",
          "sourceRange": {
            "start": {
              "line": 874,
              "column": 20
            },
            "end": {
              "line": 879,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "total-items",
          "description": "stores the number of total items (over all pages)",
          "sourceRange": {
            "start": {
              "line": 884,
              "column": 20
            },
            "end": {
              "line": 889,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "hide-column-configuration",
          "description": "if this is true, the column selection switch is hidden and the user can not enable/disable or rearrange columns",
          "sourceRange": {
            "start": {
              "line": 894,
              "column": 20
            },
            "end": {
              "line": 897,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "debounced",
          "description": "Whether the request debounced or not",
          "sourceRange": {
            "start": {
              "line": 902,
              "column": 20
            },
            "end": {
              "line": 905,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items",
          "description": "contains all items that are currently in the grid. You can set this property to manually\nhandle the content of the grid in case you don't want to use the remote loading",
          "sourceRange": {
            "start": {
              "line": 911,
              "column": 20
            },
            "end": {
              "line": 917,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "locked-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as locked.",
          "sourceRange": {
            "start": {
              "line": 922,
              "column": 20
            },
            "end": {
              "line": 925,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote",
          "description": "the url to load items from. Alternatively you can use the property `items` to manually add data to the grid,\nhowever that disables the possibility to search, filter, or sort",
          "sourceRange": {
            "start": {
              "line": 931,
              "column": 20
            },
            "end": {
              "line": 934,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-path-data",
          "description": "where the items array is located in the remote response.",
          "sourceRange": {
            "start": {
              "line": 939,
              "column": 20
            },
            "end": {
              "line": 942,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-path-count",
          "description": "where the total count of items is located in the remote response.",
          "sourceRange": {
            "start": {
              "line": 947,
              "column": 20
            },
            "end": {
              "line": 950,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-params",
          "description": "additional url params to be added to the remote url",
          "sourceRange": {
            "start": {
              "line": 955,
              "column": 20
            },
            "end": {
              "line": 960,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "remote-param-filter",
          "description": "this url param is added to the `remote` url containing the user selected filters",
          "sourceRange": {
            "start": {
              "line": 965,
              "column": 20
            },
            "end": {
              "line": 968,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-limit",
          "description": "this url param is added to the `remote` url containing the number of items to be loaded",
          "sourceRange": {
            "start": {
              "line": 973,
              "column": 20
            },
            "end": {
              "line": 976,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-offset",
          "description": "this url param is added to the `remote` url containing the requested page",
          "sourceRange": {
            "start": {
              "line": 981,
              "column": 20
            },
            "end": {
              "line": 984,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-search",
          "description": "this url param is added to the `remote` url containing the search phrase the user entered",
          "sourceRange": {
            "start": {
              "line": 989,
              "column": 20
            },
            "end": {
              "line": 992,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-search-fields",
          "description": "this url param is added to the `remote` url containing the fields that should be searched for `query`",
          "sourceRange": {
            "start": {
              "line": 997,
              "column": 20
            },
            "end": {
              "line": 1000,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-serialize-optionals",
          "description": "this url param is added to the `remote` url containing the optional fields.",
          "sourceRange": {
            "start": {
              "line": 1005,
              "column": 20
            },
            "end": {
              "line": 1008,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-sort",
          "description": "this url parameter is added to the `remote` url containing the user selected sorting. Set this\nto null to sort the data locally",
          "sourceRange": {
            "start": {
              "line": 1014,
              "column": 20
            },
            "end": {
              "line": 1017,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "paging-disabled",
          "description": "set to true if results should not be paged",
          "sourceRange": {
            "start": {
              "line": 1023,
              "column": 20
            },
            "end": {
              "line": 1026,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "selection-mode",
          "description": "how rows can be selected. \"multi\" to allow the selection of n elements, \"single\" to allow the\nselection of only a single element (selecting a new one will deselect the previously selected one).\nAny other value will disable the selection model entirely.\nIf a selection mode is enabled, a checkbox is added to the start of each row",
          "sourceRange": {
            "start": {
              "line": 1034,
              "column": 20
            },
            "end": {
              "line": 1036,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-item",
          "description": "if selectionMode=single, this property contains the selected item if one is selected",
          "sourceRange": {
            "start": {
              "line": 1041,
              "column": 20
            },
            "end": {
              "line": 1045,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "selected-items",
          "description": "contains all the currently selected items",
          "sourceRange": {
            "start": {
              "line": 1050,
              "column": 20
            },
            "end": {
              "line": 1056,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "disable-tap-row-to-select",
          "description": "if this is enabled and a selection mode is active, tapping a row will not select it. Rows can then\nonly be selected by explicitely checking their checkboxes",
          "sourceRange": {
            "start": {
              "line": 1062,
              "column": 20
            },
            "end": {
              "line": 1065,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "show-create-button",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 1067,
              "column": 20
            },
            "end": {
              "line": 1070,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "show-multi-actions",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 1072,
              "column": 20
            },
            "end": {
              "line": 1075,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "multi-actions",
          "description": "array of multi actions in list; example of a single action {icon: \"add\", label: \"create\", \"event\": \"create\"}",
          "sourceRange": {
            "start": {
              "line": 1086,
              "column": 20
            },
            "end": {
              "line": 1088,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "disable-create-button",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 1090,
              "column": 20
            },
            "end": {
              "line": 1093,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items-per-page-list",
          "description": "List of items per page used for dom-repeat in dropdown",
          "sourceRange": {
            "start": {
              "line": 1098,
              "column": 20
            },
            "end": {
              "line": 1103,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "title",
          "description": "the title will show on headline",
          "sourceRange": {
            "start": {
              "line": 1216,
              "column": 20
            },
            "end": {
              "line": 1218,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "header",
          "description": "internal property, the title  will show on headline",
          "sourceRange": {
            "start": {
              "line": 1223,
              "column": 20
            },
            "end": {
              "line": 1225,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "multi-line-header",
          "description": "property that indicates header will display one line (single) or two line (multi)",
          "sourceRange": {
            "start": {
              "line": 1248,
              "column": 20
            },
            "end": {
              "line": 1251,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "row-click-mode",
          "description": "how rows can be click.\n\"double\" will fire click event when user double click on row, a single click still allows to select a row\n\"single\" will fire click event when user click on row, to select a row should select on checkbox\nAny other value will disable row-click-actions",
          "sourceRange": {
            "start": {
              "line": 1275,
              "column": 20
            },
            "end": {
              "line": 1277,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "entity-identifying-field",
          "description": "this field contains an identifier of some sort that uniqely identifies the entity (the \"class\", not the object!)",
          "sourceRange": {
            "start": {
              "line": 1282,
              "column": 20
            },
            "end": {
              "line": 1285,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "item-update-event-name",
          "description": "if an event with this name is fired on `document`, that event is caught and parsed for updates:\nIf it contains an item that identifies as the same item that this grid is currently showing, that item\nis updated locally. It is regarded as \"the same item\" if the values of the \"entityIdentifyingField\"\nand the value of the \"_identifyingColumn.field\" match.",
          "sourceRange": {
            "start": {
              "line": 1306,
              "column": 20
            },
            "end": {
              "line": 1309,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "frozen-by-field",
          "description": "if an item has a property with this name that evaluates to true, it is considered frozen and displayed\naccordingly. The contents of this field is displayed as \"locker\" (i.e.: locked by [[frozenByName]])",
          "sourceRange": {
            "start": {
              "line": 1315,
              "column": 20
            },
            "end": {
              "line": 1318,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "column-configuration-changed",
          "description": "Fired when the `columnConfiguration` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "page-changed",
          "description": "Fired when the `page` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "sort-changed",
          "description": "Fired when the `sort` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "filter-list-changed",
          "description": "Fired when the `filterList` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "query-changed",
          "description": "Fired when the `query` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "total-items-changed",
          "description": "Fired when the `totalItems` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-items-changed",
          "description": "Fired when the `selectedItems` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "toolbar",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 573,
              "column": 16
            },
            "end": {
              "line": 573,
              "column": 44
            }
          }
        },
        {
          "description": "",
          "name": "singleActions",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 576,
              "column": 16
            },
            "end": {
              "line": 576,
              "column": 50
            }
          }
        },
        {
          "description": "",
          "name": "multiActions",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 579,
              "column": 16
            },
            "end": {
              "line": 579,
              "column": 49
            }
          }
        },
        {
          "description": "",
          "name": "noSelectionActions",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 583,
              "column": 16
            },
            "end": {
              "line": 583,
              "column": 55
            }
          }
        }
      ],
      "tagname": "actindo-grid"
    }
  ]
}
