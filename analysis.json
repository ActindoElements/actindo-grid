{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-cell-content.html",
      "properties": [
        {
          "name": "row",
          "type": "Object",
          "description": "an object containing all values for this row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 15,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "column",
          "type": "Object",
          "description": "an object containing the column configuration for the cell being rendered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 20
            },
            "end": {
              "line": 23,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "renderValue",
          "description": "renders the content if this cell",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 12
            },
            "end": {
              "line": 93,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "row",
              "type": "{}"
            },
            {
              "name": "column",
              "type": "{field: String, type: {}}"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 8
        },
        "end": {
          "line": 94,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridCellContent",
      "attributes": [
        {
          "name": "row",
          "description": "an object containing all values for this row",
          "sourceRange": {
            "start": {
              "line": 12,
              "column": 20
            },
            "end": {
              "line": 15,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "column",
          "description": "an object containing the column configuration for the cell being rendered",
          "sourceRange": {
            "start": {
              "line": 20,
              "column": 20
            },
            "end": {
              "line": 23,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-cell-content"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-search.html",
      "properties": [
        {
          "name": "collapsed",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "userInput",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 35,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "query",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 20
            },
            "end": {
              "line": 41,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onQueryChanged\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "fields",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 20
            },
            "end": {
              "line": 45,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 12
            },
            "end": {
              "line": 54,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onButtonTap",
          "description": "called when the user taps the search button",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 12
            },
            "end": {
              "line": 75,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onQueryChanged",
          "description": "called when the query changes. Let userInput follow this new value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 12
            },
            "end": {
              "line": 85,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "String"
            }
          ]
        },
        {
          "name": "_onSearch",
          "description": "called when the user wishes to search for the current query",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 12
            },
            "end": {
              "line": 105,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onSearchBlur",
          "description": "called when the search input is blurred",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 12
            },
            "end": {
              "line": 120,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 8
        },
        "end": {
          "line": 121,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridSearch",
      "attributes": [
        {
          "name": "collapsed",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "user-input",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 35,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "query",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 20
            },
            "end": {
              "line": 41,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "fields",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 20
            },
            "end": {
              "line": 45,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "query-changed",
          "description": "Fired when the `query` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-search"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-in-option-input.html",
      "properties": [
        {
          "name": "displayField",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 20
            },
            "end": {
              "line": 24,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"label\""
        },
        {
          "name": "valueField",
          "type": "string",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 20
            },
            "end": {
              "line": 28,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"id\""
        },
        {
          "name": "value",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 34,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 12
            },
            "end": {
              "line": 41,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 16,
          "column": 8
        },
        "end": {
          "line": 42,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterInOprionInput",
      "attributes": [
        {
          "name": "display-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 21,
              "column": 20
            },
            "end": {
              "line": 24,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 20
            },
            "end": {
              "line": 28,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 20
            },
            "end": {
              "line": 31,
              "column": 21
            }
          },
          "metadata": {}
        },
        {
          "name": "selected-item",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 32,
              "column": 20
            },
            "end": {
              "line": 34,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-in-option-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-edit.html",
      "properties": [
        {
          "name": "editing",
          "type": "boolean",
          "description": "Whether is editing or not",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 20
            },
            "end": {
              "line": 130,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "The status of the filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 20
            },
            "end": {
              "line": 137,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "filter",
          "type": "Object",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 20
            },
            "end": {
              "line": 145,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "property",
          "type": "string",
          "description": "contains the column value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 20
            },
            "end": {
              "line": 151,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "operator",
          "type": "string",
          "description": "contains the operator value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 20
            },
            "end": {
              "line": 158,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onOperatorChanged\""
            }
          }
        },
        {
          "name": "value",
          "type": "?",
          "description": "contains the filter value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 20
            },
            "end": {
              "line": 162,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_valueHistory",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 20
            },
            "end": {
              "line": 168,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "_operators",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 20
            },
            "end": {
              "line": 172,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_selectedColumn",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 20
            },
            "end": {
              "line": 176,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onSelectedColumnChanged\""
            }
          }
        },
        {
          "name": "_saveLabel",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 20
            },
            "end": {
              "line": 180,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "filterName",
          "type": "string",
          "description": "the filter name will show on header",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 20
            },
            "end": {
              "line": 186,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_onSelectedColumnChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 12
            },
            "end": {
              "line": 203,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newColumn"
            },
            {
              "name": "oldColumn"
            }
          ]
        },
        {
          "name": "_onOperatorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 12
            },
            "end": {
              "line": 232,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opt"
            }
          ]
        },
        {
          "name": "getInputComponent",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 12
            },
            "end": {
              "line": 253,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            },
            {
              "name": "operator"
            }
          ]
        },
        {
          "name": "_onValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 12
            },
            "end": {
              "line": 273,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_getSaveLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 12
            },
            "end": {
              "line": 282,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            }
          ]
        },
        {
          "name": "_save",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 12
            },
            "end": {
              "line": 305,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_cancel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 12
            },
            "end": {
              "line": 310,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "open",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 12
            },
            "end": {
              "line": 316,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "reset",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 12
            },
            "end": {
              "line": 331,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 119,
          "column": 8
        },
        "end": {
          "line": 332,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterEdit",
      "attributes": [
        {
          "name": "editing",
          "description": "Whether is editing or not",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 20
            },
            "end": {
              "line": 130,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "active",
          "description": "The status of the filter",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 20
            },
            "end": {
              "line": 137,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "filter",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 20
            },
            "end": {
              "line": 145,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "property",
          "description": "contains the column value",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 20
            },
            "end": {
              "line": 151,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "operator",
          "description": "contains the operator value",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 20
            },
            "end": {
              "line": 158,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "contains the filter value",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 20
            },
            "end": {
              "line": 162,
              "column": 29
            }
          },
          "metadata": {}
        },
        {
          "name": "filter-name",
          "description": "the filter name will show on header",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 20
            },
            "end": {
              "line": 186,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-edit"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter.html",
      "properties": [
        {
          "name": "filterList",
          "type": "Array",
          "description": "contain all available filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 20
            },
            "end": {
              "line": 97,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "filterColumns",
          "type": "Array",
          "description": "contains all the columns has filterable property equal to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 12
            },
            "end": {
              "line": 109,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_deleteMultiple",
          "description": "Remove all available filter",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 12
            },
            "end": {
              "line": 117,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_createNewFilter",
          "description": "Append a filter to the filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 12
            },
            "end": {
              "line": 125,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_removeFilter",
          "description": "Remove a filter from filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 12
            },
            "end": {
              "line": 133,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_editFilter",
          "description": "Edit a filter of filter list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 12
            },
            "end": {
              "line": 146,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 84,
          "column": 8
        },
        "end": {
          "line": 147,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilter",
      "attributes": [
        {
          "name": "filter-list",
          "description": "contain all available filter",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 20
            },
            "end": {
              "line": 97,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "filter-columns",
          "description": "contains all the columns has filterable property equal to true",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "filter-list-changed",
          "description": "Fired when the `filterList` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-between-input.html",
      "properties": [
        {
          "name": "value",
          "type": "Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 20
            },
            "end": {
              "line": 48,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 12
            },
            "end": {
              "line": 54,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 34,
          "column": 8
        },
        "end": {
          "line": 55,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterBetweenInput",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 20
            },
            "end": {
              "line": 48,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-between-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-in-input.html",
      "properties": [
        {
          "name": "_inputValue",
          "type": "string",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 20
            },
            "end": {
              "line": 76,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "_value",
          "type": "Array",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 20
            },
            "end": {
              "line": 82,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "value",
          "type": "Array",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "ENTER",
          "type": "number",
          "description": "Key code for Enter.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 20
            },
            "end": {
              "line": 99,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "13"
        }
      ],
      "methods": [
        {
          "name": "_onKeyPress",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 12
            },
            "end": {
              "line": 111,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_remove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 12
            },
            "end": {
              "line": 116,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_computeLabelVisibility",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 12
            },
            "end": {
              "line": 121,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "label"
            }
          ]
        },
        {
          "name": "_computeAlwaysFloatLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 12
            },
            "end": {
              "line": 125,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "len"
            }
          ]
        },
        {
          "name": "_handleEnterEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 12
            },
            "end": {
              "line": 135,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_handleBackSpaceEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 12
            },
            "end": {
              "line": 144,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "getDisplayValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 12
            },
            "end": {
              "line": 149,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 68,
          "column": 8
        },
        "end": {
          "line": 150,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterInInput",
      "attributes": [
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 20
            },
            "end": {
              "line": 89,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-in-input"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-item.html",
      "properties": [
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all the columns has filterable property equal to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 20
            },
            "end": {
              "line": 90,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "The status of the filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 20
            },
            "end": {
              "line": 97,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onActiveChanged\""
            }
          }
        },
        {
          "name": "filter",
          "type": "Object",
          "description": "contains the current filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 20
            },
            "end": {
              "line": 106,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onFilterChanged\""
            }
          }
        },
        {
          "name": "_label",
          "type": "string",
          "description": "Internal property, hold the title will show on tag content",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 20
            },
            "end": {
              "line": 112,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_firstLoad",
          "type": "boolean",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 20
            },
            "end": {
              "line": 119,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "_filter",
          "type": "Object",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 20
            },
            "end": {
              "line": 125,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_tagNoCheckBox",
          "type": "boolean",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 20
            },
            "end": {
              "line": 132,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_showEditDialog",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 12
            },
            "end": {
              "line": 145,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onFilterChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 12
            },
            "end": {
              "line": 151,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            }
          ]
        },
        {
          "name": "_onActiveChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 12
            },
            "end": {
              "line": 161,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ]
        },
        {
          "name": "_save",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 163,
              "column": 12
            },
            "end": {
              "line": 169,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_remove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 12
            },
            "end": {
              "line": 174,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_getDisplayValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 12
            },
            "end": {
              "line": 192,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "node"
            },
            {
              "name": "filter"
            }
          ]
        },
        {
          "name": "_getLabel",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 12
            },
            "end": {
              "line": 203,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filter"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 79,
          "column": 8
        },
        "end": {
          "line": 204,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterItem",
      "attributes": [
        {
          "name": "columns",
          "description": "contains all the columns has filterable property equal to true",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 20
            },
            "end": {
              "line": 90,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "active",
          "description": "The status of the filter",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 20
            },
            "end": {
              "line": 97,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "filter",
          "description": "contains the current filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 20
            },
            "end": {
              "line": 106,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-item"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-tag.html",
      "properties": [
        {
          "name": "id",
          "type": "string",
          "description": "identification for this tag",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 20
            },
            "end": {
              "line": 94,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "set to true if the filter is active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onActiveChanged\""
            }
          }
        },
        {
          "name": "noCheckBox",
          "type": "boolean",
          "description": "if this is true, the checkbox on the left will be hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 20
            },
            "end": {
              "line": 110,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "noRemoveButton",
          "type": "boolean",
          "description": "if this is true, the close icon on the right will be hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 20
            },
            "end": {
              "line": 118,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noSelfRemove",
          "type": "boolean",
          "description": "if this is true, the item will not self-destroyed, the only an \"remove\" event will be fired",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 20
            },
            "end": {
              "line": 126,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_remove",
          "description": "Call when user click on the close icon",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 12
            },
            "end": {
              "line": 154,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onActiveChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 156,
              "column": 12
            },
            "end": {
              "line": 164,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 83,
          "column": 8
        },
        "end": {
          "line": 165,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterTag",
      "attributes": [
        {
          "name": "id",
          "description": "identification for this tag",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 20
            },
            "end": {
              "line": 94,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "active",
          "description": "set to true if the filter is active",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 20
            },
            "end": {
              "line": 103,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-check-box",
          "description": "if this is true, the checkbox on the left will be hidden",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 20
            },
            "end": {
              "line": 110,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-remove-button",
          "description": "if this is true, the close icon on the right will be hidden",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 20
            },
            "end": {
              "line": 118,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-self-remove",
          "description": "if this is true, the item will not self-destroyed, the only an \"remove\" event will be fired",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 20
            },
            "end": {
              "line": 126,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "content",
          "range": {
            "file": "actindo-grid-filter-tag.html",
            "start": {
              "line": 72,
              "column": 16
            },
            "end": {
              "line": 72,
              "column": 44
            }
          }
        }
      ],
      "tagname": "actindo-grid-filter-tag"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-error.html",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 63,
          "column": 8
        },
        "end": {
          "line": 71,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridError",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-error"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-configurator.html",
      "properties": [
        {
          "name": "active",
          "type": "boolean",
          "description": "set to true if the filter is active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 20
            },
            "end": {
              "line": 63,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onActiveChanged\""
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 12
            },
            "end": {
              "line": 71,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onActiveChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 12
            },
            "end": {
              "line": 80,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 51,
          "column": 8
        },
        "end": {
          "line": 81,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterConfigurator",
      "attributes": [
        {
          "name": "active",
          "description": "set to true if the filter is active",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 20
            },
            "end": {
              "line": 63,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "content",
          "range": {
            "file": "actindo-grid-filter-configurator.html",
            "start": {
              "line": 40,
              "column": 12
            },
            "end": {
              "line": 40,
              "column": 40
            }
          }
        }
      ],
      "tagname": "actindo-grid-filter-configurator"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-form.html",
      "properties": [
        {
          "name": "editing",
          "type": "boolean",
          "description": "Whether is editing or not",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 20
            },
            "end": {
              "line": 73,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "active",
          "type": "boolean",
          "description": "The status of the filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 20
            },
            "end": {
              "line": 80,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all the columns has filterable property equal to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 20
            },
            "end": {
              "line": 86,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "filter",
          "type": "Object",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 20
            },
            "end": {
              "line": 94,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "property",
          "type": "string",
          "description": "contains the column value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 20
            },
            "end": {
              "line": 100,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "operator",
          "type": "string",
          "description": "contains the operator value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 20
            },
            "end": {
              "line": 107,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onOperatorChanged\""
            }
          }
        },
        {
          "name": "value",
          "type": "?",
          "description": "contains the filter value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 20
            },
            "end": {
              "line": 111,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_valueHistory",
          "type": "Object",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 20
            },
            "end": {
              "line": 120,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "_operators",
          "type": "Array",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 124,
              "column": 20
            },
            "end": {
              "line": 127,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_selectedColumn",
          "type": "Object",
          "description": "Internal property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 131,
              "column": 20
            },
            "end": {
              "line": 134,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onSelectedColumnChanged\""
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_onSelectedColumnChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 12
            },
            "end": {
              "line": 151,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newColumn"
            },
            {
              "name": "oldColumn"
            }
          ]
        },
        {
          "name": "_onOperatorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 12
            },
            "end": {
              "line": 180,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opt"
            }
          ]
        },
        {
          "name": "getInputComponent",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 12
            },
            "end": {
              "line": 201,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            },
            {
              "name": "operator"
            }
          ]
        },
        {
          "name": "_onValueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 12
            },
            "end": {
              "line": 221,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_save",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 12
            },
            "end": {
              "line": 245,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "reset",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 12
            },
            "end": {
              "line": 256,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 62,
          "column": 8
        },
        "end": {
          "line": 257,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterForm",
      "attributes": [
        {
          "name": "editing",
          "description": "Whether is editing or not",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 20
            },
            "end": {
              "line": 73,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "active",
          "description": "The status of the filter",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 20
            },
            "end": {
              "line": 80,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "columns",
          "description": "contains all the columns has filterable property equal to true",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 20
            },
            "end": {
              "line": 86,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "filter",
          "description": "contains the filter criteria, the key \"property\" contains the column value,\nthe field \"operator\" contains operator value(=,>,like,etc...), the field \"value\" contains the value need to be filtered\n{property: String, operator: string, value: mixed}",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 20
            },
            "end": {
              "line": 94,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "property",
          "description": "contains the column value",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 20
            },
            "end": {
              "line": 100,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "operator",
          "description": "contains the operator value",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 20
            },
            "end": {
              "line": 107,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "value",
          "description": "contains the filter value",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 20
            },
            "end": {
              "line": 111,
              "column": 29
            }
          },
          "metadata": {}
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-form"
    },
    {
      "description": "",
      "summary": "",
      "path": "actindo-grid-filter-columns.html",
      "properties": [
        {
          "name": "columns",
          "type": "Array",
          "description": "contains all the columns",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 20
            },
            "end": {
              "line": 124,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "_columns",
          "type": "Array",
          "description": "Internal property, contains all the columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 20
            },
            "end": {
              "line": 131,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          }
        },
        {
          "name": "_displayColumns",
          "type": "Array",
          "description": "Internal property, contains all display columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 20
            },
            "end": {
              "line": 137,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_hiddenColumns",
          "type": "Array",
          "description": "Internal property, contains all hidden columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 20
            },
            "end": {
              "line": 143,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_columnKey",
          "type": "string",
          "description": "Internal property, key of the selected column",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 20
            },
            "end": {
              "line": 149,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_columnPosition",
          "type": "Object",
          "description": "Internal property, list position by column field value",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 20
            },
            "end": {
              "line": 155,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_loaded",
          "type": "boolean",
          "description": "Internal property, columns properties first loaded",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 20
            },
            "end": {
              "line": 162,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 177,
              "column": 12
            },
            "end": {
              "line": 180,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onColumnsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 12
            },
            "end": {
              "line": 198,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columns"
            }
          ]
        },
        {
          "name": "_onAddColumn",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 12
            },
            "end": {
              "line": 214,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_updateColumnPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 12
            },
            "end": {
              "line": 223,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "displayColumns"
            }
          ]
        },
        {
          "name": "_onApply",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 12
            },
            "end": {
              "line": 228,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onRemove",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 12
            },
            "end": {
              "line": 242,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ]
        },
        {
          "name": "_getColumnPosition",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 12
            },
            "end": {
              "line": 248,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "indexList"
            },
            {
              "name": "field"
            }
          ]
        },
        {
          "name": "_onDragFinish",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 12
            },
            "end": {
              "line": 258,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 113,
          "column": 8
        },
        "end": {
          "line": 259,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGridFilterColumns",
      "attributes": [
        {
          "name": "columns",
          "description": "contains all the columns",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 20
            },
            "end": {
              "line": 124,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "columns-changed",
          "description": "Fired when the `columns` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "actindo-grid-filter-columns"
    },
    {
      "description": "`<actindo-grid>` implements a highly reusable data grid to display your data.\n\n### Features\n\n- column configuration as property, therefore dynamic column changes are propagated through data binding\n- global search bar (hidden if no column is configured to be `searchable`)\n- filter panel (hidden if no column is configured to be `filterable`)\n- sorting (by every column that is configured to be `sortable`)\n- pagination as long as a `remote` is specified to fetch data from\n- remote loading of data, including sorting, paging, searching, filtering\n- static data display (disables pagination)\n- custom cell formatting through `render` callbacks\n- hidden columns that can be shown manually",
      "summary": "",
      "path": "actindo-grid.html",
      "properties": [
        {
          "name": "columnConfiguration",
          "type": "[{label: string, field: string, type: mixed, identifying: bool, hidden: bool, searchable: bool, sortable: bool, filterable: bool, resizable: bool, render: function, renderDefaultFilter: function, nullMessage: string}]",
          "description": "contains the columns and their configuration.\n* label: the name of this column, used in the header\n* field: data index where this columns value is located\n* type: the data type of this column, can be any valid javascript type\n* identifying: if this column contains a unique key that identifies the single rows. _One_ column must have this if you want to use a selection mode\n* hidden: if this column is hidden by default and needs to be enabled manually\n* searchable: if this field is searched through the global search field. Defaults to false\n* sortable: if the grid can by sorted by this field. Defaults to false\n* filterable: if the grid can be filtered by this columns values\n* resizable: if this column is resizable\n* render: Optional callback that is given the columns value for each row and has to return a DOMElement to be displayed\n* renderDefaultFilter: return a DOMElement element to be displayed\n* nullMessage: Text shown if field is null; if nothing specified it will display empty string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 20
            },
            "end": {
              "line": 627,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "emptyMessage",
          "type": "string",
          "description": "if grid has no items this message will be shown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 20
            },
            "end": {
              "line": 635,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "disabledField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is disabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 640,
              "column": 20
            },
            "end": {
              "line": 643,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_disabled\""
        },
        {
          "name": "finishedField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as finished.\nThis only works with a selection mode enabled since the marker replaces the checkbox",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 649,
              "column": 20
            },
            "end": {
              "line": 652,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_finished\""
        },
        {
          "name": "page",
          "type": "number",
          "description": "the current page number",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 657,
              "column": 20
            },
            "end": {
              "line": 662,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onPageChanged\""
            }
          },
          "defaultValue": "1"
        },
        {
          "name": "sort",
          "type": "Object",
          "description": "contains the current sorting criteria, the key \"field\" contains the field name, the field \"order\" a boolean: true is ASC, false is DESC\n{field: String, order: Boolean}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 668,
              "column": 20
            },
            "end": {
              "line": 675,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onSortChanged\""
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "filterList",
          "type": "[{property: string, operator: string, value: mixed}]",
          "description": "contains the list of filter of the grid.\n* property: the name of the column\n* operator: the value of the operator such as (=, like,..)\n* value: the value need to be filtered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 689,
              "column": 20
            },
            "end": {
              "line": 695,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "query",
          "type": "string",
          "description": "contains the current search query",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 700,
              "column": 20
            },
            "end": {
              "line": 705,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onQueryChanged\""
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "totalItems",
          "type": "number",
          "description": "stores the number of total items (over all pages)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 710,
              "column": 20
            },
            "end": {
              "line": 715,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          },
          "defaultValue": "0"
        },
        {
          "name": "hideColumnConfiguration",
          "type": "boolean",
          "description": "if this is true, the column selection switch is hidden and the user can not enable/disable or rearrange columns",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 720,
              "column": 20
            },
            "end": {
              "line": 723,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "debounced",
          "type": "boolean",
          "description": "Whether the request debounced or not",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 728,
              "column": 20
            },
            "end": {
              "line": 731,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "items",
          "type": "Array",
          "description": "contains all items that are currently in the grid. You can set this property to manually\nhandle the content of the grid in case you don't want to use the remote loading",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 737,
              "column": 20
            },
            "end": {
              "line": 743,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "lockedField",
          "type": "string",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as locked.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 748,
              "column": 20
            },
            "end": {
              "line": 751,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"_locked\""
        },
        {
          "name": "remote",
          "type": "string",
          "description": "the url to load items from. Alternatively you can use the property `items` to manually add data to the grid,\nhowever that disables the possibility to search, filter, or sort",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 757,
              "column": 20
            },
            "end": {
              "line": 760,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "null"
        },
        {
          "name": "remotePathData",
          "type": "string",
          "description": "where the items array is located in the remote response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 765,
              "column": 20
            },
            "end": {
              "line": 768,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"data\""
        },
        {
          "name": "remotePathCount",
          "type": "string",
          "description": "where the total count of items is located in the remote response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 773,
              "column": 20
            },
            "end": {
              "line": 776,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"n_rows\""
        },
        {
          "name": "remoteParams",
          "type": "Object",
          "description": "additional url params to be added to the remote url",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 781,
              "column": 20
            },
            "end": {
              "line": 786,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "remoteParamFilter",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the user selected filters",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 791,
              "column": 20
            },
            "end": {
              "line": 794,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"filter\""
        },
        {
          "name": "remoteParamLimit",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the number of items to be loaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 799,
              "column": 20
            },
            "end": {
              "line": 802,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"limit\""
        },
        {
          "name": "remoteParamOffset",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the requested page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 807,
              "column": 20
            },
            "end": {
              "line": 810,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"start\""
        },
        {
          "name": "remoteParamSearch",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the search phrase the user entered",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 815,
              "column": 20
            },
            "end": {
              "line": 818,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"query\""
        },
        {
          "name": "remoteParamSearchFields",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the fields that should be searched for `query`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 823,
              "column": 20
            },
            "end": {
              "line": 826,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"fields\""
        },
        {
          "name": "remoteParamSerializeOptionals",
          "type": "string",
          "description": "this url param is added to the `remote` url containing the optional fields.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 831,
              "column": 20
            },
            "end": {
              "line": 834,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"serializeOptionals\""
        },
        {
          "name": "remoteParamSort",
          "type": "string",
          "description": "this url parameter is added to the `remote` url containing the user selected sorting. Set this\nto null to sort the data locally",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 840,
              "column": 20
            },
            "end": {
              "line": 843,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"sort\""
        },
        {
          "name": "pagingDisabled",
          "type": "boolean",
          "description": "set to true if results should not be paged",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 849,
              "column": 20
            },
            "end": {
              "line": 852,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "selectionMode",
          "type": "string",
          "description": "how rows can be selected. \"multi\" to allow the selection of n elements, \"single\" to allow the\nselection of only a single element (selecting a new one will deselect the previously selected one).\nAny other value will disable the selection model entirely.\nIf a selection mode is enabled, a checkbox is added to the start of each row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 860,
              "column": 20
            },
            "end": {
              "line": 862,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "selectedItem",
          "type": "Object",
          "description": "if selectionMode=single, this property contains the selected item if one is selected",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 867,
              "column": 20
            },
            "end": {
              "line": 871,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"onSelectedItemChanged\""
            }
          }
        },
        {
          "name": "selectedItems",
          "type": "Array",
          "description": "contains all the currently selected items",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 876,
              "column": 20
            },
            "end": {
              "line": 882,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "disableTapRowToSelect",
          "type": "boolean",
          "description": "if this is enabled and a selection mode is active, tapping a row will not select it. Rows can then\nonly be selected by explicitely checking their checkboxes",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 888,
              "column": 20
            },
            "end": {
              "line": 891,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "showCreateButton",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 893,
              "column": 20
            },
            "end": {
              "line": 896,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "disableCreateButton",
          "type": "boolean",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 898,
              "column": 20
            },
            "end": {
              "line": 901,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "itemsPerPageList",
          "type": "Array",
          "description": "List of items per page used for dom-repeat in dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 906,
              "column": 20
            },
            "end": {
              "line": 911,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[5,10,25,50,100]"
        },
        {
          "name": "_columns",
          "type": "Array",
          "description": "internal property that holds the processed columns",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 917,
              "column": 20
            },
            "end": {
              "line": 923,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "_filterColumns",
          "type": "Array",
          "description": "holds the colmumn has filterable is true",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 928,
              "column": 20
            },
            "end": {
              "line": 931,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_identifyingColumn",
          "type": "Object",
          "description": "holds the colmumn that is marked as identifying",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 936,
              "column": 20
            },
            "end": {
              "line": 938,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_displayColumns",
          "type": "Array",
          "description": "holds the column has hidden is false",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 943,
              "column": 20
            },
            "end": {
              "line": 946,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_everythingSelected",
          "type": "boolean",
          "description": "property that controls the checked state of the \"select all checkbox\" in selectionMode=multi",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 951,
              "column": 20
            },
            "end": {
              "line": 954,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_partiallySelected",
          "type": "boolean",
          "description": "property that indicates if a partial selection is active (at least one item, but not all)",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 959,
              "column": 20
            },
            "end": {
              "line": 962,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_xhr",
          "type": "Object",
          "description": "current xhr request",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 967,
              "column": 20
            },
            "end": {
              "line": 969,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_error",
          "type": "boolean",
          "description": "property that indicates if a xhr request is failed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 974,
              "column": 21
            },
            "end": {
              "line": 977,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_pages",
          "type": "Array",
          "description": "List of pages used for dom-repeat in dropdown to change current page",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 982,
              "column": 20
            },
            "end": {
              "line": 985,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_itemsPerPage",
          "type": "number",
          "description": "how many items to show per page",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 990,
              "column": 20
            },
            "end": {
              "line": 994,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_onItemsPerPageChanged\""
            }
          },
          "defaultValue": "25"
        },
        {
          "name": "_serializeOptionals",
          "type": "Array",
          "description": "List of the optional column. The hidden column will not be in this list",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 999,
              "column": 20
            },
            "end": {
              "line": 1002,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "_loadedColumns",
          "type": "Array",
          "description": "List of the loaded column",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1007,
              "column": 20
            },
            "end": {
              "line": 1010,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "[]"
        },
        {
          "name": "title",
          "type": "string",
          "description": "the title will show on headline",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1015,
              "column": 20
            },
            "end": {
              "line": 1017,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "header",
          "type": "string",
          "description": "internal property, the title  will show on headline",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1022,
              "column": 20
            },
            "end": {
              "line": 1024,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_showFilterArea",
          "type": "boolean",
          "description": "internal property, set to true if the filter area will show",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1029,
              "column": 20
            },
            "end": {
              "line": 1033,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_showColumnsArea",
          "type": "boolean",
          "description": "internal property, set to true if the columns area will show",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1038,
              "column": 20
            },
            "end": {
              "line": 1042,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "multiLineHeader",
          "type": "boolean",
          "description": "property that indicates header will display one line (single) or two line (multi)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1047,
              "column": 20
            },
            "end": {
              "line": 1050,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_isProcessingInitLayout",
          "type": "boolean",
          "description": "internal property, set to true if it is processing init layout",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1055,
              "column": 20
            },
            "end": {
              "line": 1058,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_isFirstTimeRenderLayout",
          "type": "boolean",
          "description": "internal property, whether first time render layout or not",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1063,
              "column": 21
            },
            "end": {
              "line": 1066,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        }
      ],
      "methods": [
        {
          "name": "firstPage",
          "description": "loads the first page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1077,
              "column": 12
            },
            "end": {
              "line": 1079,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "lastPage",
          "description": "loads the last page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1084,
              "column": 12
            },
            "end": {
              "line": 1086,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "nextPage",
          "description": "loads the next page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1091,
              "column": 12
            },
            "end": {
              "line": 1093,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "previousPage",
          "description": "loads the previous page",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1098,
              "column": 12
            },
            "end": {
              "line": 1100,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "refresh",
          "description": "reloads the grid data from the remote",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1105,
              "column": 12
            },
            "end": {
              "line": 1152,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "debounced",
              "defaultValue": "true"
            }
          ]
        },
        {
          "name": "clearFilters",
          "description": "Removes all filters",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1157,
              "column": 12
            },
            "end": {
              "line": 1160,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "getFilters",
          "description": "Returns list of all filters (active/inactive)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1166,
              "column": 12
            },
            "end": {
              "line": 1169,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array"
          }
        },
        {
          "name": "addFilter",
          "description": "Adds a filter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1179,
              "column": 12
            },
            "end": {
              "line": 1193,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field",
              "type": "String"
            },
            {
              "name": "operator",
              "type": "String"
            },
            {
              "name": "value",
              "type": "*"
            },
            {
              "name": "active",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "success"
          }
        },
        {
          "name": "getVisibleFields",
          "description": "Returns array containing all fields that are visible",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1199,
              "column": 12
            },
            "end": {
              "line": 1210,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Array"
          }
        },
        {
          "name": "showColumnByFieldName",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1216,
              "column": 12
            },
            "end": {
              "line": 1222,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName",
              "type": "String",
              "description": "Shows column with corresponding fieldName if existing"
            }
          ]
        },
        {
          "name": "hideColumnByFieldName",
          "description": "Hides column with corresponding fieldName if visible",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1227,
              "column": 12
            },
            "end": {
              "line": 1233,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName"
            }
          ]
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1251,
              "column": 12
            },
            "end": {
              "line": 1258,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "setColumnToPositionIndex",
          "description": "Moves columns to new position",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1311,
              "column": 12
            },
            "end": {
              "line": 1323,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName",
              "type": "String"
            },
            {
              "name": "newIndex",
              "type": "Number"
            }
          ]
        },
        {
          "name": "getColumnWidth",
          "description": "Get width in px of a column",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1329,
              "column": 12
            },
            "end": {
              "line": 1338,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "setColumnWidth",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1344,
              "column": 12
            },
            "end": {
              "line": 1353,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName",
              "type": "String",
              "description": "field of the column to be resized"
            },
            {
              "name": "width",
              "type": "Number",
              "description": "in px"
            }
          ]
        },
        {
          "name": "_onRefreshTap",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1355,
              "column": 12
            },
            "end": {
              "line": 1358,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onScroll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1360,
              "column": 12
            },
            "end": {
              "line": 1366,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onScrollHeader",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1371,
              "column": 12
            },
            "end": {
              "line": 1377,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onGridHeaderMouseOver",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1382,
              "column": 12
            },
            "end": {
              "line": 1385,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onGridBodyMouseOver",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1390,
              "column": 12
            },
            "end": {
              "line": 1393,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_positionCreateButton",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1398,
              "column": 12
            },
            "end": {
              "line": 1411,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_initLayout",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1416,
              "column": 12
            },
            "end": {
              "line": 1506,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_initColumnResizing",
          "description": "sets up the column resizing handlers",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1512,
              "column": 12
            },
            "end": {
              "line": 1550,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_resizeColumn",
          "description": "Performs column resizing;",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1557,
              "column": 12
            },
            "end": {
              "line": 1577,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list",
              "type": "Array",
              "description": "of table cells of that column in all rows and header"
            },
            {
              "name": "width",
              "type": "Number",
              "description": "in px"
            }
          ]
        },
        {
          "name": "setSortOrder",
          "description": "Initialize sorting",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1584,
              "column": 12
            },
            "end": {
              "line": 1601,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldName",
              "type": "String"
            },
            {
              "name": "order",
              "type": "String",
              "description": "ASC or DESC not case sensitive"
            }
          ]
        },
        {
          "name": "removeSorting",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1603,
              "column": 12
            },
            "end": {
              "line": 1606,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onSortChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1612,
              "column": 12
            },
            "end": {
              "line": 1615,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_inactiveFilterChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1617,
              "column": 12
            },
            "end": {
              "line": 1620,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onHeadTapped",
          "description": "called when the table head is tapped. Check if the tapped column is sortable and if so, sort by it",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1626,
              "column": 12
            },
            "end": {
              "line": 1682,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_onQueryChanged",
          "description": "called when the property `query` changes. Set page to 1",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1688,
              "column": 12
            },
            "end": {
              "line": 1690,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onRowTap",
          "description": "called when a row in the table is tapped. If row tapping should select the row and a selection mode\nis active, the tapped row is selected",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1697,
              "column": 12
            },
            "end": {
              "line": 1732,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "onSelectedItemChanged",
          "description": "called when the selected item changes (selection mode = single). Updates the selectedItems property",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 1739,
              "column": 12
            },
            "end": {
              "line": 1750,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "{}",
              "description": "the newly selected item"
            }
          ]
        },
        {
          "name": "_toggleAllSelection",
          "description": "called when the \"select all\" checkbox is tapped. Toggles the selection of all items",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1756,
              "column": 12
            },
            "end": {
              "line": 1775,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onItemsChanged",
          "description": "called when the items property changes. Move it to _items and make sure to properly\npropagate the change.\nUnfortunately a copy of th original item has to be created to make polymer aware of this change.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1785,
              "column": 12
            },
            "end": {
              "line": 1824,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "change",
              "type": "{path: String, base: []}"
            }
          ]
        },
        {
          "name": "_onPageChanged",
          "description": "called when a new page is set. Make sure it's within the possible bounds",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1832,
              "column": 12
            },
            "end": {
              "line": 1837,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newVal",
              "type": "Number"
            }
          ]
        },
        {
          "name": "_onSelectionChanged",
          "description": "called when the selected items change. Fires an event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1843,
              "column": 12
            },
            "end": {
              "line": 1847,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_attachOperatorToColumn",
          "description": "attach operator property to column object",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1853,
              "column": 12
            },
            "end": {
              "line": 1873,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ]
        },
        {
          "name": "_onColumnConfigurationChanged",
          "description": "call when column configuration change",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1880,
              "column": 12
            },
            "end": {
              "line": 1909,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columns"
            }
          ]
        },
        {
          "name": "_checkIdentifyColumn",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1911,
              "column": 12
            },
            "end": {
              "line": 1925,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column"
            }
          ]
        },
        {
          "name": "_consolidateColumns",
          "description": "called when the columnConfiguration changes. Process the columns and copy them to the internal\n_columns property.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 1934,
              "column": 12
            },
            "end": {
              "line": 1973,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columnConfiguration",
              "type": "{base: []}"
            }
          ]
        },
        {
          "name": "_load",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 1975,
              "column": 12
            },
            "end": {
              "line": 2055,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "remoteParamSerializeOptionals"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filter"
            },
            {
              "name": "serializeOptionals"
            }
          ]
        },
        {
          "name": "_onFilterChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2057,
              "column": 12
            },
            "end": {
              "line": 2080,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "filterList"
            }
          ]
        },
        {
          "name": "_onRemoteChanged",
          "description": "called on explicit refresh or if any of the parameter changes that require a reload from the remote",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2086,
              "column": 12
            },
            "end": {
              "line": 2092,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "remoteParamSerializeOptionals"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filterList = []"
            },
            {
              "name": "serializeOptionals"
            }
          ]
        },
        {
          "name": "_loadDebounced",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2094,
              "column": 12
            },
            "end": {
              "line": 2119,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote"
            },
            {
              "name": "remotePathData"
            },
            {
              "name": "remotePathCount"
            },
            {
              "name": "remoteParams"
            },
            {
              "name": "remoteParamFilter"
            },
            {
              "name": "remoteParamLimit"
            },
            {
              "name": "remoteParamOffset"
            },
            {
              "name": "remoteParamSearch"
            },
            {
              "name": "remoteParamSearchFields"
            },
            {
              "name": "remoteParamSort"
            },
            {
              "name": "remoteParamSerializeOptionals"
            },
            {
              "name": "itemsPerPage"
            },
            {
              "name": "page"
            },
            {
              "name": "sort"
            },
            {
              "name": "query"
            },
            {
              "name": "filterList"
            },
            {
              "name": "serializeOptionals"
            }
          ]
        },
        {
          "name": "_onCreateClick",
          "description": "Called when create button clicked",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2126,
              "column": 12
            },
            "end": {
              "line": 2128,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onItemsPerPageChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2133,
              "column": 12
            },
            "end": {
              "line": 2138,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isItemsPerPageSelected",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2143,
              "column": 12
            },
            "end": {
              "line": 2145,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selectedItem"
            }
          ]
        },
        {
          "name": "_serialize",
          "description": "takes the given object and creates an http query string from it\nusage: let str = _serialize({foo: 'bar', baz: ['a', 'b']}); => 'foo=bar&baz[0]=a&baz[1]=b'",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2160,
              "column": 12
            },
            "end": {
              "line": 2171,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj",
              "type": "{}",
              "description": "the object to serialize"
            },
            {
              "name": "prefix",
              "type": "String",
              "description": "internal only (used in recursive calls for nested objects)"
            }
          ],
          "return": {
            "type": "String"
          }
        },
        {
          "name": "_arrayLengthEquals",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2177,
              "column": 12
            },
            "end": {
              "line": 2184,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            },
            {
              "name": "equals"
            }
          ]
        },
        {
          "name": "_arrayLengthGT",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2186,
              "column": 12
            },
            "end": {
              "line": 2193,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            },
            {
              "name": "gt"
            }
          ]
        },
        {
          "name": "_canPageBackward",
          "description": "checks if the user can page backwards",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2202,
              "column": 12
            },
            "end": {
              "line": 2204,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the current page"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_canPageForward",
          "description": "checks if the user can page forwards",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2215,
              "column": 12
            },
            "end": {
              "line": 2217,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the current page"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems",
              "type": "Number",
              "description": "how mnay items are in the grid in total"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_getItemsFrom",
          "description": "calculates the offset for the pagination query",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2227,
              "column": 12
            },
            "end": {
              "line": 2229,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the page to calculate the offset for"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems"
            }
          ],
          "return": {
            "type": "Number"
          }
        },
        {
          "name": "_getItemsTo",
          "description": "returns the index of the last item on the given page",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2238,
              "column": 12
            },
            "end": {
              "line": 2240,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "page",
              "type": "Number",
              "description": "the pag to calculate the last index for"
            },
            {
              "name": "itemsPerPage",
              "type": "Number",
              "description": "how many items per page should be shown"
            },
            {
              "name": "totalItems"
            }
          ]
        },
        {
          "name": "_evaluatesTrue",
          "description": "checks if the given value evaluates to true",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2249,
              "column": 12
            },
            "end": {
              "line": 2251,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isColumnVisibile",
          "description": "determines if the given column is visible",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2260,
              "column": 12
            },
            "end": {
              "line": 2262,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "{hidden: bool}"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isItemSelected",
          "description": "checks if the given item is selected",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2272,
              "column": 12
            },
            "end": {
              "line": 2274,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item",
              "type": "{}",
              "description": "one item from the current data array"
            },
            {
              "name": "selectedItems",
              "type": "[]",
              "description": "an array of currently selected items"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isSearchHidden",
          "description": "checks if the grid search should be hidden. This is the case when no remote is configured\nor if no column is marked as searchable",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2285,
              "column": 12
            },
            "end": {
              "line": 2298,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "remote",
              "type": "String"
            },
            {
              "name": "columns",
              "type": "{}"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_isSortedBy",
          "description": "checks if the grid is currently sorted by the given column",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2308,
              "column": 12
            },
            "end": {
              "line": 2314,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "column",
              "type": "{field: String}",
              "description": "the column to check"
            },
            {
              "name": "sort",
              "type": "{field: String}",
              "description": "the current sorting array"
            }
          ],
          "return": {
            "type": "Boolean"
          }
        },
        {
          "name": "_propertyEvaluatesTrue",
          "description": "determines if the given field evaluates to true in the given item.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2322,
              "column": 12
            },
            "end": {
              "line": 2332,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field",
              "type": "String"
            },
            {
              "name": "item",
              "type": "{}"
            }
          ]
        },
        {
          "name": "_stringEquals",
          "description": "checks if the given string equals one or more given strings. The first given parameter is the value to\nlook for, it is compared with oll other given params and if one of them matches, true is returned; otherwise\nfalse",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 2342,
              "column": 12
            },
            "end": {
              "line": 2353,
              "column": 13
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "_onClickFilterIcon",
          "description": "when click filter icon will show or hide filter area",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2358,
              "column": 12
            },
            "end": {
              "line": 2361,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onClickColumnIcon",
          "description": "when click column icon will show or hide columns area",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2366,
              "column": 12
            },
            "end": {
              "line": 2369,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_isHeaderSingleMode",
          "description": "check header mode display is single or multi, default is single",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 2375,
              "column": 12
            },
            "end": {
              "line": 2377,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 586,
          "column": 8
        },
        "end": {
          "line": 2378,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "Polymer.Element",
      "name": "ActindoGrid",
      "attributes": [
        {
          "name": "column-configuration",
          "description": "contains the columns and their configuration.\n* label: the name of this column, used in the header\n* field: data index where this columns value is located\n* type: the data type of this column, can be any valid javascript type\n* identifying: if this column contains a unique key that identifies the single rows. _One_ column must have this if you want to use a selection mode\n* hidden: if this column is hidden by default and needs to be enabled manually\n* searchable: if this field is searched through the global search field. Defaults to false\n* sortable: if the grid can by sorted by this field. Defaults to false\n* filterable: if the grid can be filtered by this columns values\n* resizable: if this column is resizable\n* render: Optional callback that is given the columns value for each row and has to return a DOMElement to be displayed\n* renderDefaultFilter: return a DOMElement element to be displayed\n* nullMessage: Text shown if field is null; if nothing specified it will display empty string",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 20
            },
            "end": {
              "line": 627,
              "column": 21
            }
          },
          "metadata": {},
          "type": "[{label: string, field: string, type: mixed, identifying: bool, hidden: bool, searchable: bool, sortable: bool, filterable: bool, resizable: bool, render: function, renderDefaultFilter: function, nullMessage: string}]"
        },
        {
          "name": "empty-message",
          "description": "if grid has no items this message will be shown",
          "sourceRange": {
            "start": {
              "line": 632,
              "column": 20
            },
            "end": {
              "line": 635,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disabled-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is disabled",
          "sourceRange": {
            "start": {
              "line": 640,
              "column": 20
            },
            "end": {
              "line": 643,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "finished-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as finished.\nThis only works with a selection mode enabled since the marker replaces the checkbox",
          "sourceRange": {
            "start": {
              "line": 649,
              "column": 20
            },
            "end": {
              "line": 652,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "page",
          "description": "the current page number",
          "sourceRange": {
            "start": {
              "line": 657,
              "column": 20
            },
            "end": {
              "line": 662,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "sort",
          "description": "contains the current sorting criteria, the key \"field\" contains the field name, the field \"order\" a boolean: true is ASC, false is DESC\n{field: String, order: Boolean}",
          "sourceRange": {
            "start": {
              "line": 668,
              "column": 20
            },
            "end": {
              "line": 675,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "filter-list",
          "description": "contains the list of filter of the grid.\n* property: the name of the column\n* operator: the value of the operator such as (=, like,..)\n* value: the value need to be filtered",
          "sourceRange": {
            "start": {
              "line": 689,
              "column": 20
            },
            "end": {
              "line": 695,
              "column": 21
            }
          },
          "metadata": {},
          "type": "[{property: string, operator: string, value: mixed}]"
        },
        {
          "name": "query",
          "description": "contains the current search query",
          "sourceRange": {
            "start": {
              "line": 700,
              "column": 20
            },
            "end": {
              "line": 705,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "total-items",
          "description": "stores the number of total items (over all pages)",
          "sourceRange": {
            "start": {
              "line": 710,
              "column": 20
            },
            "end": {
              "line": 715,
              "column": 21
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "hide-column-configuration",
          "description": "if this is true, the column selection switch is hidden and the user can not enable/disable or rearrange columns",
          "sourceRange": {
            "start": {
              "line": 720,
              "column": 20
            },
            "end": {
              "line": 723,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "debounced",
          "description": "Whether the request debounced or not",
          "sourceRange": {
            "start": {
              "line": 728,
              "column": 20
            },
            "end": {
              "line": 731,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items",
          "description": "contains all items that are currently in the grid. You can set this property to manually\nhandle the content of the grid in case you don't want to use the remote loading",
          "sourceRange": {
            "start": {
              "line": 737,
              "column": 20
            },
            "end": {
              "line": 743,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "locked-field",
          "description": "if an item has a key with this name and contains a value that evaluates to true, that row is marked as locked.",
          "sourceRange": {
            "start": {
              "line": 748,
              "column": 20
            },
            "end": {
              "line": 751,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote",
          "description": "the url to load items from. Alternatively you can use the property `items` to manually add data to the grid,\nhowever that disables the possibility to search, filter, or sort",
          "sourceRange": {
            "start": {
              "line": 757,
              "column": 20
            },
            "end": {
              "line": 760,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-path-data",
          "description": "where the items array is located in the remote response.",
          "sourceRange": {
            "start": {
              "line": 765,
              "column": 20
            },
            "end": {
              "line": 768,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-path-count",
          "description": "where the total count of items is located in the remote response.",
          "sourceRange": {
            "start": {
              "line": 773,
              "column": 20
            },
            "end": {
              "line": 776,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-params",
          "description": "additional url params to be added to the remote url",
          "sourceRange": {
            "start": {
              "line": 781,
              "column": 20
            },
            "end": {
              "line": 786,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "remote-param-filter",
          "description": "this url param is added to the `remote` url containing the user selected filters",
          "sourceRange": {
            "start": {
              "line": 791,
              "column": 20
            },
            "end": {
              "line": 794,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-limit",
          "description": "this url param is added to the `remote` url containing the number of items to be loaded",
          "sourceRange": {
            "start": {
              "line": 799,
              "column": 20
            },
            "end": {
              "line": 802,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-offset",
          "description": "this url param is added to the `remote` url containing the requested page",
          "sourceRange": {
            "start": {
              "line": 807,
              "column": 20
            },
            "end": {
              "line": 810,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-search",
          "description": "this url param is added to the `remote` url containing the search phrase the user entered",
          "sourceRange": {
            "start": {
              "line": 815,
              "column": 20
            },
            "end": {
              "line": 818,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-search-fields",
          "description": "this url param is added to the `remote` url containing the fields that should be searched for `query`",
          "sourceRange": {
            "start": {
              "line": 823,
              "column": 20
            },
            "end": {
              "line": 826,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-serialize-optionals",
          "description": "this url param is added to the `remote` url containing the optional fields.",
          "sourceRange": {
            "start": {
              "line": 831,
              "column": 20
            },
            "end": {
              "line": 834,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "remote-param-sort",
          "description": "this url parameter is added to the `remote` url containing the user selected sorting. Set this\nto null to sort the data locally",
          "sourceRange": {
            "start": {
              "line": 840,
              "column": 20
            },
            "end": {
              "line": 843,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "paging-disabled",
          "description": "set to true if results should not be paged",
          "sourceRange": {
            "start": {
              "line": 849,
              "column": 20
            },
            "end": {
              "line": 852,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "selection-mode",
          "description": "how rows can be selected. \"multi\" to allow the selection of n elements, \"single\" to allow the\nselection of only a single element (selecting a new one will deselect the previously selected one).\nAny other value will disable the selection model entirely.\nIf a selection mode is enabled, a checkbox is added to the start of each row",
          "sourceRange": {
            "start": {
              "line": 860,
              "column": 20
            },
            "end": {
              "line": 862,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "selected-item",
          "description": "if selectionMode=single, this property contains the selected item if one is selected",
          "sourceRange": {
            "start": {
              "line": 867,
              "column": 20
            },
            "end": {
              "line": 871,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "selected-items",
          "description": "contains all the currently selected items",
          "sourceRange": {
            "start": {
              "line": 876,
              "column": 20
            },
            "end": {
              "line": 882,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "disable-tap-row-to-select",
          "description": "if this is enabled and a selection mode is active, tapping a row will not select it. Rows can then\nonly be selected by explicitely checking their checkboxes",
          "sourceRange": {
            "start": {
              "line": 888,
              "column": 20
            },
            "end": {
              "line": 891,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "show-create-button",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 893,
              "column": 20
            },
            "end": {
              "line": 896,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "disable-create-button",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 898,
              "column": 20
            },
            "end": {
              "line": 901,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "items-per-page-list",
          "description": "List of items per page used for dom-repeat in dropdown",
          "sourceRange": {
            "start": {
              "line": 906,
              "column": 20
            },
            "end": {
              "line": 911,
              "column": 21
            }
          },
          "metadata": {},
          "type": "Array"
        },
        {
          "name": "title",
          "description": "the title will show on headline",
          "sourceRange": {
            "start": {
              "line": 1015,
              "column": 20
            },
            "end": {
              "line": 1017,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "header",
          "description": "internal property, the title  will show on headline",
          "sourceRange": {
            "start": {
              "line": 1022,
              "column": 20
            },
            "end": {
              "line": 1024,
              "column": 21
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "multi-line-header",
          "description": "property that indicates header will display one line (single) or two line (multi)",
          "sourceRange": {
            "start": {
              "line": 1047,
              "column": 20
            },
            "end": {
              "line": 1050,
              "column": 21
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "column-configuration-changed",
          "description": "Fired when the `columnConfiguration` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "page-changed",
          "description": "Fired when the `page` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "sort-changed",
          "description": "Fired when the `sort` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "filter-list-changed",
          "description": "Fired when the `filterList` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "query-changed",
          "description": "Fired when the `query` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "total-items-changed",
          "description": "Fired when the `totalItems` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "items-changed",
          "description": "Fired when the `items` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-item-changed",
          "description": "Fired when the `selectedItem` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-items-changed",
          "description": "Fired when the `selectedItems` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [
        {
          "description": "",
          "name": "toolbar",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 423,
              "column": 16
            },
            "end": {
              "line": 423,
              "column": 44
            }
          }
        },
        {
          "description": "",
          "name": "singleActions",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 426,
              "column": 16
            },
            "end": {
              "line": 426,
              "column": 50
            }
          }
        },
        {
          "description": "",
          "name": "multiActions",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 429,
              "column": 16
            },
            "end": {
              "line": 429,
              "column": 49
            }
          }
        },
        {
          "description": "",
          "name": "noSelectionActions",
          "range": {
            "file": "actindo-grid.html",
            "start": {
              "line": 433,
              "column": 16
            },
            "end": {
              "line": 433,
              "column": 55
            }
          }
        }
      ],
      "tagname": "actindo-grid"
    }
  ]
}
